{"version":3,"sources":["./src/app/Produit/produit-edit/produit-edit.component.ts","./src/app/Produit/produit-edit/produit-edit.component.html","./src/app/Utils/carteProduit/carte-produit/carte-produit.component.ts","./src/app/Utils/carteProduit/carte-produit/carte-produit.component.html","./src/app/Header/header/header.component.ts","./src/app/Header/header/header.component.html","./src/services/label.service.ts","./src/app/Utils/bouton/bouton.component.ts","./src/app/Utils/bouton/bouton.component.html","./src/model/reduction.model.ts","./src/app/Auth/login/login.component.ts","./src/app/Auth/login/login.component.html","./src/app/Modal/modal-confirm/modal-confirm.component.ts","./src/app/Modal/modal-confirm/modal-confirm.component.html","./src/app/Panier/panier-edit/panier-edit.component.ts","./src/app/Panier/panier-edit/panier-edit.component.html","./src/services/produit.service.ts","./src/services/variant.service.ts","./src/environments/environment.ts","./src/app/Footer/footer.component.ts","./src/app/Footer/footer.component.html","./src/app/Menu/sous-menu/sous-menu.component.ts","./src/app/Menu/sous-menu/sous-menu.component.html","./src/services/adresse.service.ts","./src/services/security/token-storage.service.ts","./src/app/Admin/admin-view-tag/admin-view-tag.component.ts","./src/app/Admin/admin-view-tag/admin-view-tag.component.html","./src/services/user.service.ts","./src/services/auth.service.ts","./src/app/Admin/admin-view-categorie-list/admin-view-categorie-list.component.ts","./src/app/Admin/admin-view-categorie-list/admin-view-categorie-list.component.html","./src/app/Admin/admin-view-sous-categorie-list/admin-view-sous-categorie-list.component.ts","./src/app/Admin/admin-view-sous-categorie-list/admin-view-sous-categorie-list.component.html","./src/app/Tags/tag-edit/tag-edit.component.ts","./src/app/Tags/tag-edit/tag-edit.component.html","./src/model/variant.model.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/Produit/view-product/view-product.component.ts","./src/app/Produit/view-product/view-product.component.html","./src/app/Variant/variant-edit/variant-edit.component.ts","./src/app/Variant/variant-edit/variant-edit.component.html","./src/app/Utils/petit-bouton/petit-bouton.component.ts","./src/app/Utils/petit-bouton/petit-bouton.component.html","./src/services/type.service.ts","./src/model/categorie.model.ts","./src/app/app.module.ts","./src/app/Categorie/sous-categorie-edit/sous-categorie-edit.component.ts","./src/app/Categorie/sous-categorie-edit/sous-categorie-edit.component.html","./src/services/categorie.service.ts","./src/services/service.partage.ts","./src/app/User/create-user/create-user.component.ts","./src/app/User/create-user/create-user.component.html","./src/app/Reduction/reduction-edit/reduction-edit.component.ts","./src/app/Reduction/reduction-edit/reduction-edit.component.html","./src/app/Type/type-edit/type-edit.component.ts","./src/app/Type/type-edit/type-edit.component.html","./src/app/Categorie/categorie-edit/categorie-edit.component.ts","./src/app/Categorie/categorie-edit/categorie-edit.component.html","./src/services/reduction.service.ts","./src/app/Admin/admin-view-product/admin-view-product.component.ts","./src/app/Admin/admin-view-product/admin-view-product.component.html","./src/services/security/auth-interceptor.service.ts","./src/app/Commande/commande-edit/commande-edit.component.ts","./src/app/Commande/commande-edit/commande-edit.component.html","./src/app/Admin/admin-view-variant/admin-view-variant.component.ts","./src/app/Admin/admin-view-variant/admin-view-variant.component.html","./src/app/Label/label-edit/label-edit.component.ts","./src/app/Label/label-edit/label-edit.component.html","./src/app/Adresse/adresse-edit/adresse-edit.component.ts","./src/app/Adresse/adresse-edit/adresse-edit.component.html","./src/app/Accueil/accueil/accueil.component.ts","./src/app/Accueil/accueil/accueil.component.html","./src/app/Admin/admin-view-label/admin-view-label.component.ts","./src/app/Admin/admin-view-label/admin-view-label.component.html","./src/app/User/my-space-selector/my-space-selector.component.ts","./src/app/User/my-space-selector/my-space-selector.component.html","./src/model/label.ts","./src/services/sous-categorie.service.ts","./src/app/Admin/admin-view-types-list/admin-view-types-list.component.ts","./src/app/Admin/admin-view-types-list/admin-view-types-list.component.html","./src/services/security/login-info.ts","./src/app/Produit/view-all-product/view-all-products/view-all-products.component.ts","./src/app/Produit/view-all-product/view-all-products/view-all-products.component.html","./src/model/stock.model.ts","./src/app/app-routing.module.ts","./src/app/User/my-space/my-space.component.ts","./src/app/User/my-space/my-space.component.html","./src/services/tag.service.ts","./src/app/Utils/tag-chips/tag-chips.component.ts","./src/app/Utils/tag-chips/tag-chips.component.html","./src/app/Menu/menu/menu.component.ts","./src/app/Menu/menu/menu.component.html","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import {Component, OnInit} from '@angular/core';\nimport {ActivatedRoute, Router} from '@angular/router';\nimport {FormArray, FormBuilder, FormControl, FormGroup, Validators} from '@angular/forms';\nimport {Categorie} from '../../../model/categorie.model';\nimport {Type} from '../../../model/type.model';\nimport {ProduitService} from '../../../services/produit.service';\nimport {Produit} from '../../../model/produit.model';\nimport {Stock} from '../../../model/stock.model';\nimport {TypeService} from '../../../services/type.service';\nimport {CategoriesService} from '../../../services/categorie.service';\nimport {SousCategorie} from '../../../model/sous-categorie';\nimport {Tag} from '../../../model/tag.model';\nimport {Label} from '../../../model/label';\nimport {Variant} from '../../../model/variant.model';\nimport {Reduction} from '../../../model/reduction.model';\nimport {LabelService} from '../../../services/label.service';\nimport {TagService} from '../../../services/tag.service';\nimport {SousCategorieService} from '../../../services/sous-categorie.service';\nimport {VariantService} from '../../../services/variant.service';\nimport {ReductionService} from '../../../services/reduction.service';\n\n\n@Component({\n  selector: 'app-produit-edit',\n  templateUrl: './produit-edit.component.html',\n  styleUrls: ['./produit-edit.component.css']\n})\nexport class ProduitEditComponent implements OnInit {\n\n  produit: Produit;\n  forms: FormGroup;\n  types: Array<Type>;\n  typeToAdd: Type;\n  type: Type;\n  categories: Array<Categorie>;\n  categorie: Categorie;\n  stock = Stock;\n  stockKeys = Object.keys(this.stock);\n  sousCategories: Array<SousCategorie>;\n  sousCat: SousCategorie;\n  tagsList: Array<Tag>;\n  tags: FormGroup;\n  labels: FormGroup;\n  labelList: Array<Label>;\n  variants: Array<Variant>;\n\n  constructor(private router: Router,\n              private formBuilder: FormBuilder,\n              private activatedRoute: ActivatedRoute,\n              private produitService: ProduitService,\n              private typeService: TypeService,\n              private categorieService: CategoriesService,\n              private reductionService: ReductionService,\n              private sousCategorieService: SousCategorieService,\n              private tagService: TagService,\n              private labelService: LabelService,\n              private variantService: VariantService) {\n  }\n\n  ngOnInit(): void {\n    this.activatedRoute.queryParams.subscribe(\n      (params) => {\n        const id = params.id;\n        if (id) {\n          this.patchValue(id);\n        }\n      });\n    this.initForm();\n    this.initCategorie();\n    this.initType();\n    this.initTags();\n    this.initLabels();\n    this.initSousCategorie();\n    this.initTagsForms();\n    this.initLabelForms();\n  }\n\n  onSubmit(): void {\n    if (this.forms.invalid) {\n      this.forms.markAllAsTouched();\n      return;\n    }\n    if (!this.produit || this.produit.id == null) {\n      this.produitService.createProduit(this.forms).subscribe(\n        next => {\n          console.log('form to create:', this.forms);\n          this.router.navigate(['admin/products']);\n        });\n    } else {\n      this.produitService.updateProduit(this.forms).subscribe(\n        next => {\n          console.log('form to update:', this.forms);\n          this.router.navigate(['admin/products']);\n        });\n    }\n  }\n\n  private initForm(): void {\n    this.forms = this.formBuilder.group({\n      id: '',\n      name: ['', Validators.required],\n      type: [null, Validators.required],\n      categorie: [null, Validators.required],\n      sousCategorie: [null, Validators.required],\n      tags: this.formBuilder.array([]),\n      labels: this.formBuilder.array([]),\n      origine: ['', Validators.required],\n      descriptionProduit: ['', Validators.required],\n      commentaireProduit: [''],\n      conseilUtilisation: ['', Validators.required],\n      composition: ['', Validators.required],\n      pourquoi: ['', Validators.required],\n      producteur: ['', Validators.required],\n      commentaireProducteur: ['', Validators.required],\n      allergenes: ['', Validators.required],\n      infoNutrition: ['', Validators.required],\n      reduction: Reduction,\n      urlPetitePhoto: [''],\n      urlGrandePhoto: [''],\n      variant: new Array<Variant>(),\n    });\n  }\n\n  private initCategorie(): void {\n    this.categorieService.getCategories().subscribe(data => {\n      this.categories = data;\n      if (this.produit && this.produit.categorie) {\n        this.produit.categorie = this.categories.find(value => value.id === this.produit.categorie.id);\n        this.forms.patchValue({\n          categorie: this.produit.categorie,\n        });\n      }\n    });\n  }\n\n  private initType(): void {\n    this.typeService.getTypes().subscribe(data => {\n      this.types = data;\n      if (this.produit && this.produit.type) {\n        this.produit.type = this.types.find(value => value.id === this.produit.type.id);\n        this.forms.patchValue({\n          type: this.produit.type,\n        });\n      }\n    });\n  }\n\n  private initTags(): void {\n    this.tagService.getTags().subscribe( data => {\n      this.tagsList = data;\n    });\n  }\n\n  private initTagsForms(): void {\n    this.tags = this.formBuilder.group({\n      id: [''],\n      name: ['', Validators.required],\n      description: ['', Validators.required],\n    });\n  }\n\n  private initLabels(): void  {\n    this.labelService.getLabels().subscribe( data => {\n      this.labelList = data;\n    });\n  }\n\n  private initLabelForms(): void {\n    this.labels = this.formBuilder.group({\n      id: '',\n      name: ['' , Validators.required],\n    });\n  }\n\n  private initSousCategorie(): void  {\n    this.sousCategorieService.getSousCategories().subscribe( data => {\n      this.sousCategories = data;\n      if (this.produit && this.produit.sousCategorie) {\n        this.produit.sousCategorie = this.sousCategories.find(value => value.id === this.produit.sousCategorie.id);\n        this.forms.patchValue({\n          sousCategorie: this.produit.sousCategorie,\n        });\n      }\n    });\n  }\n\n  private initVariants(id: number): void {\n    if (this.produit == null) { return; }\n    this.variantService.getVariantsByProduitId(this.produit.id).subscribe( data => {\n     this.variants = data;\n   });\n  }\n\n  private patchValue(id: any): void {\n    this.produitService.getProduit(id).subscribe(data => {\n      this.produit = data;\n      this.initVariants(this.produit.id);\n      this.forms.patchValue({\n        id: data.id,\n        name: data.name,\n        type: data.type,\n        categorie: data.categorie,\n        sousCategorie: data.sousCategorie,\n        tags: data.tags,\n        labels: data.labels,\n        origine: data.origine,\n        descriptionProduit: data.descriptionProduit,\n        commentaireProduit: data.commentaireProduit,\n        conseilUtilisation: data.conseilUtilisation,\n        composition: data.composition,\n        pourquoi: data.pourquoi,\n        producteur: data.producteur,\n        commentaireProducteur: data.commentaireProducteur,\n        allergenes: data.allergenes,\n        infoNutrition: data.infoNutrition,\n        reduction: data.reduction,\n        urlGrandePhoto: data.urlGrandePhoto,\n        urlPetitePhoto: data.urlPetitePhoto,\n        variant: data.variants,\n      });\n      const tags: FormArray = this.forms.get('tags') as FormArray;\n      this.produit.tags.forEach(t => tags.value.push(new FormControl(t)));\n\n      const labels: FormArray = this.forms.get('labels') as FormArray;\n      this.produit.labels.forEach(l => labels.value.push(new FormControl(l)));\n    });\n  }\n\n  updateCategorie(cat: Categorie): void {\n    cat = this.categories.find(value => value.id === cat.id);\n    console.log(cat);\n    this.forms.patchValue({\n      categorie: cat,\n    });\n  }\n\n  updateType(typ: Type): void {\n    typ = this.types.find(value => value.id === typ.id);\n    this.forms.patchValue({\n      type: typ,\n    });\n  }\n\n  updateSousCategorie(sousCat: SousCategorie): void {\n     sousCat = this.sousCategories.find(value => value.id === sousCat.id);\n     this.forms.patchValue({\n       sousCategorie: sousCat\n     });\n  }\n\n  uploadPetitePhoto(e: any): void {\n    console.log(e.target);\n    const file = e.target.files.length ? e.target.files[0] : null;\n    if (file) {\n      this.produitService.uploadPhoto(file).subscribe( data => {\n       this.forms.patchValue({urlPetitePhoto: data.urlPhoto});\n      });\n    }\n  }\n\n  uploadGrandePhoto(e: any): void {\n    console.log(e.target);\n    const file = e.target.files.length ? e.target.files[0] : null;\n    if (file) {\n      this.produitService.uploadPhoto(file).subscribe( data => {\n        this.forms.patchValue({urlGrandePhoto: data.urlPhoto});\n      });\n    }\n  }\n\n  isTagContain(tags: Array<Tag>, tag: Tag): boolean {\n    return tags.map(t => t.name).includes((tag.name));\n  }\n\n  onCheckTagChange(e): void {\n    const tags: FormArray = this.forms.get('tags') as FormArray;\n    const value = e.source.value;\n    if (e.checked) {\n      tags.push(new FormControl(value));\n    }\n    else {\n      tags.controls.push(tags.value.filter(t => t.value.id !== value.id));\n    }\n    console.log('after pushing: ', tags);\n  }\n\n  isLabelContain(labels: Array<Label>, label: Label): boolean {\n    return labels.map(l => l.name).includes((label.name));\n  }\n\n  onCheckLabelChange(e): void {\n    const labels: FormArray = this.forms.get('labels') as FormArray;\n    const value = e.source.value;\n    if (e.checked) {\n      labels.push(new FormControl(value));\n    }\n    else {\n      labels.controls.push(labels.value.filter(l => l.value.id !== value.id));\n    }\n    console.log('after pushing: ', labels);\n  }\n}\n","<div class=\"container\">\n  <div class=\"Produit\">\n<mat-dialog-content>\n  <h2 mat-dialog-title *ngIf=\"produit == null\">Ajouter un produit</h2>\n  <h2 mat-dialog-title *ngIf=\"produit != null\">Modifier un produit</h2>\n\n  <form [formGroup]=\"forms\" (ngSubmit)=\"onSubmit()\">\n\n    <mat-form-field class=\"example-full-width col-6\">\n      <mat-label>Nom:</mat-label>\n      <input matInput type=\"text\" placeholder=\"Nom\" formControlName=\"name\">\n      <mat-error [hidden]=\"forms.get('name').valid || !forms.get('name').touched\">\n        Le <strong>nom</strong> du type de produit doit être renseigné.\n      </mat-error>\n    </mat-form-field>\n\n    <mat-form-field class=\"example-full-width col-6\">\n      <mat-label>Origine:</mat-label>\n      <input matInput type=\"text\" placeholder=\"Origine\" formControlName=\"origine\">\n      <mat-error [hidden]=\"forms.get('origine').valid || !forms.get('origine').touched\">\n        <strong>L'origine </strong>du produit doit être renseigné.\n      </mat-error>\n    </mat-form-field>\n\n\n    <mat-form-field appearance=\"fill\" class=\"col-4\">\n      <mat-label>Type</mat-label>\n      <mat-select formControlName=\"type\">\n        <mat-option (onSelectionChange)=\"updateType(typ)\" *ngFor=\"let typ of types\" [value]=\"typ\">{{typ.name}}</mat-option>\n      </mat-select>\n      <mat-error [hidden]=\"forms.get('type').valid || !forms.get('type').touched\">\n        Le<strong> type </strong>du produit doit être renseigné.\n      </mat-error>\n    </mat-form-field>\n\n\n    <mat-form-field appearance=\"fill\" class=\"col-4\">\n      <mat-label>Categorie</mat-label>\n      <mat-select formControlName=\"categorie\">\n        <mat-option *ngFor=\"let cat of categories\" (onSelectionChange)=\"updateCategorie(cat)\" [value]=\"cat\">{{cat.name}}</mat-option>\n      </mat-select>\n      <mat-error [hidden]=\"forms.get('categorie').valid || !forms.get('categorie').touched\">\n        La<strong> categorie </strong>du produit doit être renseignée.\n      </mat-error>\n    </mat-form-field>\n\n    <mat-form-field appearance=\"fill\" class=\"col-4\">\n      <mat-label>Sous-Categorie</mat-label>\n      <mat-select formControlName=\"sousCategorie\">\n        <mat-option *ngFor=\"let scat of sousCategories\" (onSelectionChange)=\"updateSousCategorie(scat)\" [value]=\"scat\">{{scat.name}}</mat-option>\n      </mat-select>\n    </mat-form-field>\n\n    <div class=\"checkbox\">\n    <mat-list class=\"col-md-6\">\n      <mat-label>Choisissez les tags associés à ce produit :</mat-label>\n      <mat-list-item *ngFor=\"let tag of tagsList\">\n        <mat-checkbox class=\"tags\"\n                      [value]=\"tag\"\n                      [checked]=\"this.produit && isTagContain(this.produit.tags, tag)\"\n                      (change)=\"onCheckTagChange($event)\">{{tag.name}}\n        </mat-checkbox>\n      </mat-list-item>\n    </mat-list>\n\n\n      <mat-list class=\"col-md-6\">\n        <mat-label>Choisissez les labels associés à ce produit :</mat-label>\n        <mat-list-item *ngFor=\"let label of labelList\">\n          <mat-checkbox class=\"labels\"\n                        [value]=\"label\"\n                        [checked]=\"this.produit && isLabelContain(this.produit.labels, label)\"\n                        (change)=\"onCheckLabelChange($event)\">{{label.name}}\n          </mat-checkbox>\n        </mat-list-item>\n      </mat-list>\n    </div>\n\n    <mat-form-field class=\"col-md-12\">\n      <mat-label>Description:</mat-label>\n      <textarea matInput type=\"text\" placeholder=\"Description\" formControlName=\"descriptionProduit\"></textarea>\n      <mat-error [hidden]=\"forms.get('descriptionProduit').valid || !forms.get('descriptionProduit').touched\">\n        La<strong> description </strong>du produit doit être renseignée.\n      </mat-error>\n    </mat-form-field>\n\n    <mat-form-field class=\"col-md-12\">\n      <mat-label>Conseil d'utilisation et préparation:</mat-label>\n      <textarea matInput type=\"text\" placeholder=\"Conseil d'utilisation\" formControlName=\"conseilUtilisation\"></textarea>\n      <mat-error [hidden]=\"forms.get('conseilUtilisation').valid || !forms.get('conseilUtilisation').touched\">\n        Les<strong> conseils d'utilisations et de préparations </strong>du produit doivent être renseignés.\n      </mat-error>\n    </mat-form-field>\n\n    <mat-form-field class=\"col-md-12\">\n      <mat-label>Composition :</mat-label>\n      <textarea matInput type=\"text\" placeholder=\"Composition\" formControlName=\"composition\"></textarea>\n      <mat-error [hidden]=\"forms.get('composition').valid || !forms.get('composition').touched\">\n        La<strong> composition </strong>du produit doit être renseignée.\n      </mat-error>\n    </mat-form-field>\n\n    <mat-form-field class=\"col-md-12\">\n      <mat-label>Pourquoi ce produit ?</mat-label>\n      <textarea matInput type=\"text\" placeholder=\"pourquoi\" formControlName=\"pourquoi\"></textarea>\n      <mat-error [hidden]=\"forms.get('pourquoi').valid || !forms.get('pourquoi').touched\">\n        La rubrique <strong> Pourquoi ce produit ? </strong> doit être renseignée.\n      </mat-error>\n    </mat-form-field>\n\n    <mat-form-field class=\"col-md-12\">\n      <mat-label>Producteur :</mat-label>\n      <textarea matInput type=\"text\" placeholder=\"Producteur\" formControlName=\"producteur\"></textarea>\n      <mat-error [hidden]=\"forms.get('producteur').valid || !forms.get('producteur').touched\">\n        La rubrique <strong> producteur </strong> doit être renseignée.\n      </mat-error>\n    </mat-form-field>\n\n    <mat-form-field class=\"col-md-12\">\n      <mat-label>Commentaire producteur :</mat-label>\n      <textarea matInput type=\"text\" placeholder=\"Producteur\" formControlName=\"commentaireProducteur\"></textarea>\n      <mat-error [hidden]=\"forms.get('producteur').valid || !forms.get('producteur').touched\">\n        La rubrique <strong> commentaire producteur </strong> doit être renseignée.\n      </mat-error>\n    </mat-form-field>\n\n    <mat-form-field class=\"col-md-12\">\n      <mat-label>Valeurs et allergènes :</mat-label>\n      <textarea matInput type=\"text\" placeholder=\"Valeurs et allergènes\" formControlName=\"allergenes\"></textarea>\n      <mat-error [hidden]=\"forms.get('allergenes').valid || !forms.get('allergenes').touched\">\n        La rubrique <strong> valeurs et allergènes </strong> doit être renseignée.\n      </mat-error>\n    </mat-form-field>\n\n\n    <mat-form-field class=\"col-md-12\">\n      <mat-label>Infos nutritionnelles :</mat-label>\n      <textarea matInput type=\"text\" placeholder=\"Infos nutritionnelles\" formControlName=\"infoNutrition\"></textarea>\n      <mat-error [hidden]=\"forms.get('infoNutrition').valid || !forms.get('infoNutrition').touched\">\n        La rubrique <strong> Infos nutritionnelles  </strong> doit être renseignée.\n      </mat-error>\n    </mat-form-field>\n\n    <mat-form-field class=\"col-md-12\">\n      <mat-label>Commentaire supplémentaire:</mat-label>\n      <textarea matInput type=\"text\" placeholder=\"commentaireProduit\" formControlName=\"commentaireProduit\"></textarea>\n    </mat-form-field>\n\n    <div class=\"photo-selecteur\">\n      <label>Photo: 300 x 300 px</label>\n      <input (change)=\"uploadPetitePhoto($event)\" class=\"ng-hide\"  multiple type=\"file\"/>\n      <img src=\"{{forms.controls.urlPetitePhoto.value}}\" *ngIf=\"forms.controls.urlPetitePhoto && forms.controls.urlPetitePhoto.value\">\n    </div>\n\n    <div class=\"photo-selecteur\">\n      <label>Photo: 732 x 732 px</label>\n      <input (change)=\"uploadGrandePhoto($event)\" class=\"ng-hide\" multiple type=\"file\"/>\n      <img src=\"{{forms.controls.urlGrandePhoto.value}}\" *ngIf=\"forms.controls.urlGrandePhoto && forms.controls.urlGrandePhoto.value\">\n    </div>\n  </form>\n</mat-dialog-content>\n  <br>\n  <mat-dialog-actions>\n    <button mat-button color=\"warn\" [mat-dialog-close]>Annuler</button>\n    <button mat-button color=\"accent\" (click)=\"onSubmit()\">Sauvegarder</button>\n  </mat-dialog-actions>\n  </div>\n  <div class=\"variant\" *ngIf=\"this.produit\">\n    <app-admin-view-variant *ngIf=\"this.produit != null\" [produitId]=\"this.produit.id\"></app-admin-view-variant>\n  </div>\n\n  <div class=\"reduction\" *ngIf=\"this.produit\">\n    <app-reduction-edit *ngIf=\"this.produit != null\" [produitId]=\"this.produit.id\"></app-reduction-edit>\n  </div>\n</div>\n\n\n\n","import {Component, Input, OnInit} from '@angular/core';\nimport {Produit} from '../../../../model/produit.model';\nimport {Variant} from '../../../../model/variant.model';\n\n@Component({\n  selector: 'app-carte-produit',\n  templateUrl: './carte-produit.component.html',\n  styleUrls: ['./carte-produit.component.css']\n})\nexport class CarteProduitComponent implements OnInit {\n  @Input()\n  produit: Produit;\n  variants: Array<Variant>;\n  quantite: number;\n  prixActuel: number;\n  variantSelected: Variant;\n\n  constructor() {\n  }\n\n  ngOnInit(): void {\n    this.quantite = 0;\n    this.variants = this.produit.variants;\n    this.prixActuel = 0.0;\n  }\n\n  private afficherPrix(prix: number): string {\n    // tslint:disable-next-line:no-shadowed-variable\n    const formatter = new Intl.NumberFormat('fr-FR', {\n      style: 'currency',\n      currency: 'EUR',\n    });\n    return formatter.format(prix);\n  }\n\n  private updatePrice(): void {\n    this.prixActuel = this.quantite * this.variantSelected.prix;\n  }\n\n  changeQuantity(quantity: number): void {\n    if ((this.quantite === 0 && quantity < 0) || !this.variantSelected) {\n      return;\n    }\n    this.quantite += quantity;\n    this.updatePrice();\n  }\n\n  selectVariant(vari: Variant): void {\n    this.variantSelected = vari;\n    if (this.variantSelected) {\n      this.quantite = 0;\n      this.prixActuel = 0;\n    }\n  }\n}\n","<div class=\"wrapperCarte\" *ngIf=\"produit != null\">\n  <div class=\"produitIMG\">\n    <img src=\"{{produit.urlPetitePhoto}}\" alt=\"Photo de {{produit.name}}\">\n  </div>\n\n  <div class=\"nomProduit\">\n    <p>{{produit.name}}</p>\n  </div>\n\n  <div class=\"descrition\">\n    <p>{{produit.descriptionProduit}}</p>\n  </div>\n\n  <div class=\"type\">\n    <p>{{produit.type.name}}</p>\n  </div>\n\n  <div class=\"variantInitiateur\" *ngFor=\"let vari of variants\">\n    <div class=\"variantSelecteur\">\n     <app-petit-bouton class=\"variantButton\" (click)=\"selectVariant(vari)\" [selected]=\"this.variantSelected===vari\" label=\"{{vari.name}}\"></app-petit-bouton>\n    </div>\n    </div>\n\n  <div class=\"panierSelecteur\">\n    <div class=\"buttonRemove\">\n      <app-petit-bouton class=\"-\" label=\"-\" (click)=\"changeQuantity(-1)\"></app-petit-bouton>\n    </div>\n    <p class=\"nombre\">{{quantite}}</p>\n    <div class=\"buttonAdd\">\n      <app-petit-bouton class=\"+\" label=\"+\" (click)=\"changeQuantity(1)\" ></app-petit-bouton>\n    </div>\n    <div class=\"priceDisplay\">\n    <p class=\"prix\">{{this.afficherPrix(this.prixActuel)}}</p>\n    <p class=\"reduction\">Réduction</p>\n    </div>\n  </div>\n  <app-bouton class=\"panierButton\" label=\"Ajouter au panier\"></app-bouton>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport {TokenStorageService} from '../../../services/security/token-storage.service';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.css']\n})\nexport class HeaderComponent implements OnInit {\n  options: any;\n  authorities: string;\n  tokenEmail: string;\n\n  constructor(private token: TokenStorageService) { }\n\n  ngOnInit(): void {\n    console.log('token', this.token);\n    this.authorities = this.token.getAuthorities();\n    this.tokenEmail = this.token.getEmail();\n  }\n\n  logout(): void {\n    this.token.signOut();\n    window.location.reload();\n  }\n\n}\n","<div class=\"header\">\n<div class=\"wrapper1\">\n  <h1 [routerLink]=\"['/']\">Une dose de vert</h1>\n  <ul class=\"client-area\">\n    <li class=\"espace\"><p>Mon espace</p> </li>\n    <li><img class=\"user-icon\" src=\"../assets/img/usericon.png\"> </li>\n    <li class=\"panier\"><p>Mon panier (0)</p> </li>\n    <li><img class=\"panier-icon\" src=\"../assets/img/basket-2-512.png\"></li>\n  </ul>\n  </div>\n  <div class=\"wrapper2\">\n    <p class=\"message\">Longue vie à Une dose de vert ! 10% de réduction pour nos 100 premières commandes avec le code WELCOME</p>\n  </div>\n</div>\n","import { Injectable } from '@angular/core';\nimport {HttpClient, HttpHeaders} from '@angular/common/http';\nimport {Observable} from 'rxjs';\n\nimport {FormGroup} from '@angular/forms';\nimport {Label} from '../model/label';\nimport {ServicePartage} from './service.partage';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LabelService {\n  private URL = '/api/produits/label';\n  private adminURL = '/api/admin';\n\n  constructor(private http: HttpClient, private servicePartage: ServicePartage) {\n    this.URL = servicePartage.BACKEND_URL + this.URL;\n    this.adminURL = servicePartage.BACKEND_URL + this.adminURL;\n  }\n\n  getLabels(): Observable<Array<Label>> {\n    return this.http.get<Array<Label>>(this.URL);\n  }\n\n  getLabel(id: number): Observable<Label> {\n    return this.http.get<Label>(`${this.URL}/${id}`);\n  }\n\n  getLabelPage(page: number, size: number, sort: string): Observable<any> {\n    return this.http.get<any>(`${this.URL}/xxx?page=${page}&size=${size}&sort=${sort}`);\n  }\n\n  createLabel(form: FormGroup): Observable <Label> {\n    console.log('form:', form.value);\n    return this.http.post<Label>(this.URL, form.value);\n  }\n\n  updateLabel(form: FormGroup): Observable<Label> {\n    return this.http.put<Label>(`${this.URL}`, form.value);\n  }\n\n  deleteLabel(id: number): Observable<Label> {\n    return this.http.delete<Label>(`${this.URL}/${id}`);\n  }\n\n  uploadPhoto(file: File): Observable<any> {\n    const headers = new HttpHeaders().set('responseType', 'text');\n    const formData: FormData = new FormData();\n    formData.append('file', file, file.name);\n    return this.http.post<any>(`${this.adminURL}/upload`, formData, {\n      headers\n    });\n  }\n}\n","import {Component, Input, OnInit} from '@angular/core';\n\n@Component({\n  selector: 'app-bouton',\n  templateUrl: './bouton.component.html',\n  styleUrls: ['./bouton.component.css']\n})\nexport class BoutonComponent implements OnInit {\n  @Input()\n  label: string;\n  @Input()\n  padding: any;\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"custom-button\">\n  <button class=\"customized-button\" style=\"padding: {{padding || '10px 30px'}}\">{{label}}</button>\n</div>\n","export class Reduction {\n  id: number;\n  produitID: number;\n  pourcentageRemise: number;\n  reductionStart: Date;\n  reductionEnd: Date;\n}\n","import { Component, OnInit } from '@angular/core';\nimport {AuthLoginInfo} from '../../../services/security/login-info';\nimport {AuthService} from '../../../services/auth.service';\nimport {Router} from '@angular/router';\nimport {TokenStorageService} from '../../../services/security/token-storage.service';\nimport {FormBuilder, FormControl, FormGroup, Validators,} from '@angular/forms';\nimport {UserService} from '../../../services/user.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  forms: FormGroup;\n  formsUser: FormGroup;\n  password: string;\n  password2: string;\n  passwordsMatch = false;\n  hide = true;\n  isLoggedIn = false;\n  isLoginFailed = false;\n  errorMessage = '';\n  roles = '[]';\n  private loginInfo: AuthLoginInfo;\n\n\n  constructor(private formBuilder: FormBuilder, private authService: AuthService,\n              private tokenStorage: TokenStorageService,\n              private userService: UserService, private router: Router) { }\n\n  ngOnInit(): void {\n    this.initFormsUser();\n    this.initForms();\n    if (this.tokenStorage.getToken()) {\n      this.isLoggedIn = true;\n      this.roles = this.tokenStorage.getAuthorities();\n      this.router.navigate(['/']);\n    }\n  }\n\n  private initForms(): void {\n    this.forms = this.formBuilder.group({\n      email: ['', [Validators.email, Validators.required]],\n      password: ['', [Validators.min(6), Validators.required]],\n    });\n  }\n\n  private initFormsUser(): void {\n    this.formsUser = this.formBuilder.group(\n      {\n        genre: ['', Validators.required],\n        nom: ['', Validators.required],\n        prenom: ['', Validators.required],\n        anniversaire: new FormControl(),\n        email: new FormControl('', Validators.compose([\n          Validators.required,\n          Validators.pattern('[A-Za-z0-9._%-]+@[A-Za-z0-9._%-]+\\\\.[a-z]{2,3}')\n        ])),\n        telephone: new FormControl('', Validators.compose([\n          Validators.required,\n          Validators.pattern('^[0-9]{10}$')\n        ])),\n        password: ['', [Validators.min(6), Validators.required]],\n      });\n  }\n\n  onSubmitLogin(): void {\n    console.log(this.forms);\n\n    this.loginInfo = new AuthLoginInfo(\n      this.forms.getRawValue().email,\n      this.forms.getRawValue().password);\n\n    this.authService.attemptAuth(this.loginInfo).subscribe(\n      response => {\n        this.tokenStorage.saveToken(response.accessToken);\n        this.tokenStorage.saveEmail(response.email);\n        this.tokenStorage.saveAuthorities(response.authorities);\n        console.log(response.email);\n        console.log(response.accessToken + ' ' + response.authorities);\n\n        this.isLoginFailed = false;\n        this.isLoggedIn = true;\n        this.roles = this.tokenStorage.getAuthorities();\n        window.location.reload();\n      },\n      error => {\n        console.log('error:', error);\n        this.errorMessage = error.error.message;\n        this.isLoginFailed = true;\n      }\n    );\n    // this.router.navigate(['/']);\n  }\n\n  verifierPassword(): boolean {\n    return this.passwordsMatch = this.password === this.password2;\n  }\n\n  onSubmitCreerCompte(): void {\n    if (this.forms.invalid) {\n      this.forms.markAllAsTouched();\n      return;\n    }\n    this.userService.createUser(this.forms)\n      .subscribe(\n        response => {\n          console.log('response: ', response);\n        },\n        err => {\n          console.log('Error: ', err.error.message);\n        });\n  }\n}\n","<div class=\"wrapper\">\n\n  <div class=\"ConnexionArea\">\n    <h1> Connexion </h1>\n    <hr>\n    <form [formGroup]=\"forms\">\n      <mat-form-field class=\"col-md-12\">\n        <mat-label>Email</mat-label>\n        <input type=\"email\" matInput formControlName=\"email\" placeholder=\"Ex. pat@example.com\">\n        <mat-error>\n          Veuillez renseigner une adresse e-mail valide !\n        </mat-error>\n      </mat-form-field>\n\n      <mat-form-field class=\"col-md-12\">\n        <input matInput placeholder=\"Password\" [type]=\"hide ? 'password' : 'text'\" formControlName=\"password\" required>\n        <mat-icon matSuffix (click)=\"hide = !hide\">{{hide ? 'visibility_off' : 'visibility'}}</mat-icon>\n        <mat-error>\n          Mot de passe invalid !\n        </mat-error>\n      </mat-form-field>\n    </form>\n    <mat-dialog-actions>\n      <app-bouton  (click)=\"onSubmitLogin()\" label=\"Me connecter\"></app-bouton>\n    </mat-dialog-actions>\n  </div>\n\n  <div class=\"CompteArea\">\n    <h1> Créer un compte </h1>\n    <hr>\n    <form [formGroup]=\"formsUser\">\n      <mat-accordion>\n        <div class=\"informationsPerso\">\n          <mat-expansion-panel>\n            <mat-expansion-panel-header>\n              <mat-panel-title>\n                Informations personnelles\n              </mat-panel-title>\n            </mat-expansion-panel-header>\n\n            <mat-radio-group formControlName=\"genre\">\n              <mat-radio-button  value=\"Monsieur\">Monsieur</mat-radio-button>\n              <mat-radio-button  value=\"Madame\">Madame</mat-radio-button>\n            </mat-radio-group>\n\n            <mat-form-field>\n              <mat-label>Nom:</mat-label>\n              <input matInput placeholder=\"Nom :\" formControlName=\"nom\">\n              <mat-error [hidden]=\"forms.get('nom').valid || !forms.get('nom').touched\">\n                Le <strong>nom</strong> doit être renseigné.\n              </mat-error>\n            </mat-form-field>\n\n            <mat-form-field>\n              <mat-label>Prenom:</mat-label>\n              <input matInput placeholder=\"Prenom :\" formControlName=\"prenom\">\n              <mat-error [hidden]=\"forms.get('prenom').valid || !forms.get('prenom').touched\">\n                Le <strong>prénom</strong> doit être renseigné.\n              </mat-error>\n            </mat-form-field>\n\n\n            <mat-form-field>\n              <mat-label>Date de naissance :</mat-label>\n              <input matInput type=\"date\" placeholder=\"Date de naissance :\" [matDatepicker]=\"anniversaire\" formControlName=\"anniversaire\">\n              <mat-datepicker-toggle matSuffix [for]=\"anniversaire\"></mat-datepicker-toggle>\n              <mat-datepicker #anniversaire></mat-datepicker>\n            </mat-form-field>\n          </mat-expansion-panel>\n        </div>\n\n      </mat-accordion>\n      <mat-accordion>\n        <mat-expansion-panel>\n          <mat-expansion-panel-header>\n            <mat-panel-title>\n              Informations de connexion\n            </mat-panel-title>\n          </mat-expansion-panel-header>\n\n          <mat-form-field class=\"col-md-12\">\n            <mat-label>Email :</mat-label>\n            <input type=\"email\" matInput formControlName=\"email\" placeholder=\"Adresse email : pat@example.com \">\n            <mat-error>\n              Veuillez renseigner une adresse e-mail valide !\n            </mat-error>\n          </mat-form-field>\n\n          <mat-form-field class=\"col-md-12\">\n            <mat-label>Confirmer l'adresse email :</mat-label>\n            <input type=\"email\" matInput formControlName=\"email\" placeholder=\"Confirmer l'adresse email : pat@example.com\">\n            <mat-error>\n              Veuillez renseigner une adresse e-mail valide !\n            </mat-error>\n          </mat-form-field>\n\n          <mat-form-field class=\"col-md-12\">\n            <input matInput placeholder=\"Mot de passe\" formControlName=\"password\" name=\"password\"\n                   (change)=\"verifierPassword()\"\n                   required>\n            <mat-error>\n              Le mot de passe est incorrect. Il doit être au moins de 6 charactères.\n            </mat-error>\n          </mat-form-field>\n\n          <mat-form-field class=\"col-md-12\">\n            <input matInput  placeholder=\"Confirmer le mot de passe\" name=\"password2\"\n                   (change)=\"verifierPassword()\"\n                   required>\n            <mat-error [hidden]=\"passwordsMatch\">\n              Les mots de passes ne correspondent pas !\n            </mat-error>\n          </mat-form-field>\n\n        </mat-expansion-panel>\n      </mat-accordion>\n    </form>\n    <mat-dialog-actions>\n      <app-bouton  (click)=\"onSubmitCreerCompte()\" label=\"Créer mon compte\"></app-bouton>\n    </mat-dialog-actions>\n  </div>\n</div>\n","import {Component, Inject, Input, OnInit} from '@angular/core';\nimport {MAT_DIALOG_DATA, MatDialogRef} from '@angular/material/dialog';\n\n@Component({\n  selector: 'app-modal-confirm',\n  templateUrl: './modal-confirm.component.html',\n  styleUrls: ['./modal-confirm.component.css']\n})\nexport class ModalConfirmComponent implements OnInit {\n\n  food: string;\n\n  constructor(public dialogRef: MatDialogRef<ModalConfirmComponent>, @Inject(MAT_DIALOG_DATA) public data: any) { }\n\n  ngOnInit(): void {\n  }\n\n  onNoClick(): void {\n    this.dialogRef.close({\n      food: this.food\n    });\n  }\n\n}\n","<h1 mat-dialog-title>You come from {{data.name}}</h1>\n\n<div mat-dialog-content>\n  <p>What's your city?</p>\n  <mat-form-field>\n    <mat-label>City</mat-label>\n    <input matInput [(ngModel)]=\"data.city\">\n  </mat-form-field>\n\n  <p>Your favorite food?</p>\n  <mat-form-field>\n    <mat-label>Food:</mat-label>\n    <input matInput [(ngModel)]=\"food\">\n  </mat-form-field>\n\n  <div mat-dialog-actions>\n    <button mat-button (click)=\"onNoClick()\">Get Food</button>\n    <button mat-button [mat-dialog-close]=\"data.city\">Get City</button>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-panier-edit',\n  templateUrl: './panier-edit.component.html',\n  styleUrls: ['./panier-edit.component.css']\n})\nexport class PanierEditComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>panier-edit works!</p>\n","import { Injectable } from '@angular/core';\nimport {Produit} from '../model/produit.model';\nimport {Observable} from 'rxjs';\nimport {HttpClient, HttpEvent, HttpHeaders, HttpParams} from '@angular/common/http';\nimport {FormGroup} from '@angular/forms';\nimport {SearchCriteria} from '../model/search-criteria';\nimport {ServicePartage} from './service.partage';\n\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ProduitService {\n  private URL = '/api/produits';\n  private adminURL = '/api/admin';\n\n  constructor(private http: HttpClient, private servicePartage: ServicePartage) {\n    this.URL = servicePartage.BACKEND_URL + this.URL;\n    this.adminURL = servicePartage.BACKEND_URL + this.adminURL;\n  }\n\n  getProduits(): Observable<Array<Produit>> {\n    return this.http.get<Array<Produit>>(this.URL);\n  }\n\n  getProduitPage(page: number, size: number, sort: string): Observable<any> {\n    return this.http.get<any>(`${this.URL}/xxx?page=${page}&size=${size}&sort=${sort}`);\n  }\n\n  findProductByCriteria(searchCriteria: SearchCriteria): Observable<Array<Produit>> {\n    let customParam = new HttpParams();\n    if (searchCriteria && searchCriteria.tag != null) {\n      customParam = customParam.set('tag', searchCriteria.tag);\n    }\n    if (searchCriteria && searchCriteria.categorie != null) {\n      customParam = customParam.set('categorie', searchCriteria.categorie);\n    }\n    if (searchCriteria && searchCriteria.sousCategorie != null) {\n      customParam = customParam.set('sousCategorie', searchCriteria.sousCategorie);\n    }\n    if (searchCriteria && searchCriteria.query != null) {\n      customParam = customParam.set('query', searchCriteria.query);\n    }\n    console.log('Service:', customParam);\n    return this.http.post<Array<Produit>>(`${this.URL}/search`, searchCriteria, {params: customParam});\n  }\n\n\n  getProduit(id: number): Observable<Produit> {\n    return this.http.get<Produit>(`${this.URL}/${id}`);\n  }\n\n  createProduit(form: FormGroup): Observable <FormGroup> {\n    console.log('forms to create:', form.value);\n    return this.http.post<FormGroup>(this.URL, form.value);\n  }\n\n  updateProduit(form: FormGroup): Observable<FormGroup> {\n    return this.http.put<FormGroup>(`${this.URL}`, form.value);\n  }\n\n  deleteProduit(id: number): Observable<Produit> {\n    return this.http.delete<Produit>(`${this.URL}/${id}`);\n  }\n\n  uploadPhoto(file: File): Observable<any> {\n    const headers = new HttpHeaders().set('responseType', 'text');\n    const formData: FormData = new FormData();\n    formData.append('file', file, file.name);\n    return this.http.post<any>(`${this.adminURL}/upload`, formData, {\n      headers\n    });\n  }\n}\n","import { Injectable } from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport {Observable} from 'rxjs';\nimport {FormGroup} from '@angular/forms';\nimport {Variant} from '../model/variant.model';\nimport {ServicePartage} from './service.partage';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class VariantService {\n  private URL = '/api/produits/';\n\n  constructor(private http: HttpClient, private servicePartage: ServicePartage) {\n    this.URL = servicePartage.BACKEND_URL + this.URL;\n  }\n\n  getVariantsByProduitId(produitID: number): Observable<Array<Variant>> {\n    return this.http.get<Array<Variant>>(`${this.URL}${produitID}/variants`);\n  }\n\n  getVariant(produitID: number, id: number): Observable<Variant> {\n    return this.http.get<Variant>(`${this.URL}${produitID}/variants/${id}`);\n  }\n\n  createVariant(form: FormGroup): Observable <Variant> {\n     return this.http.post<Variant>(`${this.URL}${form.getRawValue().produitId}/variants`, form.value);\n  }\n\n  updateVariant(form: FormGroup): Observable<Variant> {\n    return this.http.put<Variant>(`${this.URL}${form.getRawValue().produitId}/variants`, form.value);\n  }\n\n  deleteVariant(produitID, id: number): Observable<Variant> {\n    return this.http.delete<Variant>(`${this.URL}${produitID}/variants/${id}`);\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import {Component, OnInit, ViewChild} from '@angular/core';\nimport {MatMenuTrigger} from '@angular/material/menu';\nimport {TokenStorageService} from '../../services/security/token-storage.service';\n\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.css']\n})\nexport class FooterComponent implements OnInit {\n  @ViewChild(MatMenuTrigger) trigger: MatMenuTrigger;\n  authorities: string;\n  tokenEmail: string;\n\n  constructor(private token: TokenStorageService) { }\n\n  ngOnInit(): void {\n    console.log('token', this.token);\n    this.authorities = this.token.getAuthorities();\n    this.tokenEmail = this.token.getEmail();\n  }\n\n  logout(): void {\n    this.token.signOut();\n    window.location.reload();\n  }\n\n}\n","<div class=\"footer\">\n  <div class=\"wrapper1\">\n    <ul class=\"uneDoseDeVert\"> <p>Une dose de vert</p>\n      <li> <a href=\"../accueil#UneDoseDeVert\">L'épicerie vétégale</a></li>\n      <li><a href=\"../accueil#NosEngagements\">Nos engagements</a></li>\n      <li><a href=\"../accueil#LivraisonTarifs\">Livraisons et tarifs</a></li>\n      <li><a href=\"../accueil#Equipe\">L'équipe</a></li>\n      <li><a href=\"../accueil\">Nos recettes</a></li>\n      <li><a href=\"../accueil\">Blog</a></li>\n    </ul>\n\n    <ul class=\"nosProduits\"> <p>Nos produits</p>\n      <li>L'épicerie fine</li>\n      <li>Prêt à cuisiner</li>\n      <li>Vrac</li>\n      <li>Cosmétique</li>\n      <li>Maison</li></ul>\n\n    <ul class=\"mentionsLegales\"> <p>Mentions légales</p>\n      <li>CGV/CGU</li>\n      <li>Politique de confidentialité</li>\n      <li>Politique de cookies</li>\n      <li>Protection des données</li>\n      <li>Mentions légales</li>\n    </ul>\n\n    <ul class=\"serviceClient\"> <p>Service Client</p>\n      <li>Nous contacter</li>\n      <li>FAQ</li>\n      <li>Paiement sécurisé</li>\n      <li>Rappel produit</li>\n    </ul>\n  </div>\n\n  <div class=\"wrapper2\">\n    <ul class=\"netSocialIcon\">\n      <li><img class=\"fb-icon\" src=\"../assets/img/ic_fb@3x.png\"></li>\n      <li><img class=\"ig-icon\" src=\"../assets/img/ic_ig@3x.png\"></li>\n    </ul>\n    <p class=\"netSocial\"> #Unedosedevert @unedosedevert</p>\n  </div>\n\n\n  <div class=\"wrapper3\">\n    <p class=\"droitReserve\">Tous droits réservés © Une dose de vert 2021.</p>\n  </div>\n\n  <mat-toolbar>\n    <button mat-button routerLink=\"login\" *ngIf=\"this.tokenEmail == null\">Se connecter</button>\n    <button mat-button *ngIf=\"this.tokenEmail != null\" (click)=\"logout()\">Me déconnecter</button>\n    <button mat-button [matMenuTriggerFor]=\"Admin\" *ngIf=\"this.authorities== 'ROLE_ADMIN'\">Admin</button>\n    <mat-menu #Admin=\"matMenu\">\n      <button mat-menu-item [matMenuTriggerFor]=\"Commande\">Commande</button>\n      <button mat-menu-item [matMenuTriggerFor]=\"Livraison\">Livraison</button>\n      <button mat-menu-item [matMenuTriggerFor]=\"Produit\">Produit</button>\n      <button mat-menu-item [matMenuTriggerFor]=\"Recette\">Recette</button>\n      <button mat-menu-item [matMenuTriggerFor]=\"Utilisateur\">Utilisateur</button>\n    </mat-menu>\n    <mat-menu #Commande=\"matMenu\">\n    </mat-menu>\n    <mat-menu #Livraison=\"matMenu\">\n    </mat-menu>\n    <mat-menu #Produit=\"matMenu\">\n      <button mat-menu-item routerLink=\"admin/products\" > Listes des produits </button>\n      <button mat-menu-item routerLink=\"admin/products/types\"> Listes des types </button>\n      <button mat-menu-item routerLink=\"admin/products/categories\"> Listes des categories </button>\n      <button mat-menu-item routerLink=\"admin/products/sous-categories\"> Listes des sous-categories </button>\n      <button mat-menu-item routerLink=\"admin/products/tags\"> Listes des tags </button>\n      <button mat-menu-item routerLink=\"admin/products/labels\"> Listes des labels </button>\n    </mat-menu>\n    <mat-menu #Recette=\"matMenu\">\n    </mat-menu>\n    <mat-menu #Utilisateur=\"matMenu\">\n    </mat-menu>\n    <p class=\"droitReserve\">Tous droits réservés © Une dose de vert 2021.</p>\n  </mat-toolbar>\n</div>\n","import {Component, Input, OnChanges, OnInit, SimpleChanges} from '@angular/core';\nimport {SousCategorie} from '../../../model/sous-categorie';\nimport {Categorie} from '../../../model/categorie.model';\nimport {Type} from '../../../model/type.model';\nimport {TypeService} from '../../../services/type.service';\nimport {CategoriesService} from '../../../services/categorie.service';\nimport {SousCategorieService} from '../../../services/sous-categorie.service';\nimport {SearchCriteria} from '../../../model/search-criteria';\nimport {Route, Router} from '@angular/router';\n\n@Component({\n  selector: 'app-sous-menu',\n  templateUrl: './sous-menu.component.html',\n  styleUrls: ['./sous-menu.component.css']\n})\nexport class SousMenuComponent implements OnInit, OnChanges {\n  @Input()\n  type: Type;\n  categories: Array<Categorie>;\n  sousCategories: Array<SousCategorie>;\n  searchCriteria: SearchCriteria;\n\n  // tslint:disable-next-line:max-line-length\n  constructor(private typeService: TypeService, private categorieService: CategoriesService, private sousCategorieService: SousCategorieService, private router: Router) { }\n\n  ngOnInit(): void {\n    this.initCategories();\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    console.log('changes: ', changes);\n    this.initCategories();\n  }\n\n  private initCategories(): void {\n   this.categories = this.type.categories;\n   console.log('cat:', this.categories);\n  }\n\n  searchProduitBySC(sc: string): void {\n    const typeSearch = 'sc';\n    console.log('sc', sc);\n    this.router.navigate(['/products'], {queryParams: {typeSearch  , search : sc}});\n  }\n  searchProduitByCat(cat: string): void {\n    const typeSearch = 'cat';\n    console.log('cat', cat);\n    this.router.navigate(['/products'], {queryParams: {typeSearch  , search : cat}});\n  }\n}\n","<div class=\"wrapper\" *ngIf=\"type != null\">\n<ul class=\"cat\" *ngFor=\"let cat of categories\">\n  <li class=\"catElem\" (click)=\"searchProduitByCat(cat.name)\">{{cat.name}}</li>\n  <ul class=\"sCat\" *ngFor=\"let sc of cat.sousCategories\">\n    <li class=\"sCatElem\" (click)=\"searchProduitBySC(sc.name)\">{{sc.name}}</li>\n  </ul>\n</ul>\n</div>\n","import { Injectable } from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport {Observable} from 'rxjs';\nimport {Adresse} from '../model/adresse.model';\nimport {FormGroup} from '@angular/forms';\nimport {ServicePartage} from './service.partage';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AdresseService {\n\n  private URL = '/api/user/address';\n\n  constructor(private http: HttpClient, private servicePartage: ServicePartage) {\n    this.URL = servicePartage.BACKEND_URL + this.URL;\n  }\n\n  getAdresse(id: number): Observable<Adresse> {\n    return this.http.get<Adresse>(`${this.URL}/${id}`);\n  }\n\n    createAdresse(adresse: FormGroup): Observable<Adresse> {\n    return this.http.post<Adresse>(this.URL, adresse.value);\n  }\n\n  updateAdresse(adresse: FormGroup): Observable<Adresse> {\n    return this.http.put<Adresse>(`${this.URL}`, adresse.value);\n  }\n\n  deleteAdresse(id: number): Observable<Adresse> {\n    return this.http.delete<Adresse>(`${this.URL}/${id}`);\n  }\n}\n","import {Injectable} from '@angular/core';\r\nimport {CookieService} from 'ngx-cookie-service';\r\n\r\nconst TOKEN_KEY = 'AuthToken';\r\nconst USERNAME_KEY = 'AuthUsername';\r\nconst AUTHORITIES_KEY = 'AuthAuthorities';\r\nconst USER_KEY = 'AuthUser';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n\r\nexport class TokenStorageService {\r\n  // private roles: Array<string> = [];\r\n  private roles: string;\r\n  private token: string;\r\n  constructor(private cookieService: CookieService) { }\r\n\r\n  signOut(): void {\r\n    this.cookieService.set('jwt-token', null);\r\n    this.cookieService.set('token-email', null);\r\n    this.cookieService.set('token-authority', '');\r\n    window.sessionStorage.clear();\r\n  }\r\n\r\n  public saveToken(token: string): void {\r\n    window.sessionStorage.removeItem(TOKEN_KEY);\r\n    window.sessionStorage.setItem(TOKEN_KEY, token);\r\n    this.cookieService.set('jwt-token', token);\r\n  }\r\n\r\n  public getToken(): string {\r\n    return sessionStorage.getItem(TOKEN_KEY) || this.cookieService.get('jwt-token');\r\n  }\r\n\r\n  public saveEmail(email: string): void {\r\n    window.sessionStorage.removeItem(USERNAME_KEY);\r\n    window.sessionStorage.setItem(USERNAME_KEY, email);\r\n    this.cookieService.set('token-email', email);\r\n  }\r\n\r\n  public getEmail(): string {\r\n    return sessionStorage.getItem(USERNAME_KEY) || this.cookieService.get('token-email');\r\n  }\r\n\r\n  public saveAuthorities(authorities: string[]): void {\r\n    window.sessionStorage.removeItem(AUTHORITIES_KEY);\r\n    window.sessionStorage.setItem(AUTHORITIES_KEY, JSON.stringify(authorities));\r\n    this.cookieService.set('token-authority', JSON.stringify(authorities));\r\n  }\r\n\r\n  public getAuthorities(): string {\r\n    this.roles = '';\r\n    const authoritiesString = sessionStorage.getItem(AUTHORITIES_KEY) || this.cookieService.get('token-authority');\r\n    if (this.getToken()) {\r\n      JSON.parse(authoritiesString).forEach(authority => {\r\n        this.roles = authority.authority;\r\n      });\r\n    }\r\n    return this.roles;\r\n  }\r\n}\r\n","import {AfterViewInit, Component, ViewChild} from '@angular/core';\nimport {Categorie} from '../../../model/categorie.model';\nimport {MatTableDataSource} from '@angular/material/table';\nimport {MatPaginator} from '@angular/material/paginator';\nimport {MatSort} from '@angular/material/sort';\nimport {Router} from '@angular/router';\nimport {MatDialog} from '@angular/material/dialog';\nimport {merge} from 'rxjs';\nimport {startWith, switchMap} from 'rxjs/operators';\nimport {Tag} from '../../../model/tag.model';\nimport {TagService} from '../../../services/tag.service';\nimport {TagEditComponent} from '../../Tags/tag-edit/tag-edit.component';\n\n@Component({\n  selector: 'app-admin-view-tag',\n  templateUrl: './admin-view-tag.component.html',\n  styleUrls: ['./admin-view-tag.component.css']\n})\nexport class AdminViewTagComponent implements AfterViewInit {\n\n  displayedColumns: string[] = ['name', 'modifier', 'supprimer'];\n  tags: Array<Tag>;\n  dataSource = new MatTableDataSource<Tag>();\n\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n  @ViewChild(MatSort) sort: MatSort;\n\n\n  constructor(private router: Router,\n              private tagService: TagService,\n              public dialog: MatDialog) {}\n\n  ngAfterViewInit(): void {\n    this.initTag();\n    this.sort.sortChange.subscribe(() => this.paginator.pageIndex = 0);\n    merge(this.sort.sortChange, this.paginator.page).pipe(\n      startWith({}),\n      switchMap(() => {\n        return this.tagService.getTagPage(this.paginator.pageIndex + 1, this.paginator.pageSize , this.sort.direction);\n      }));\n  }\n\n  private initTag(): void {\n    this.tagService.getTagPage(0, 30, 'DESC').subscribe(data => {\n        this.tags = data.content;\n        this.dataSource = new MatTableDataSource<Tag>(this.tags);\n        this.dataSource.paginator = this.paginator;\n        this.dataSource.sort = this.sort;\n        console.log('data : ', data);\n      },\n      err => {\n        console.log('error: ', err.error.message);\n      });\n  }\n\n  creerTag(): void {\n    const dialogRef = this.dialog.open(TagEditComponent, {\n      width: '350px',\n      data: {}\n    });\n    dialogRef.afterClosed().subscribe(next => {\n      this.initTag();\n    });\n  }\n\n  modifierTag(tag: Tag): void {\n    const dialogRef = this.dialog.open(TagEditComponent, {\n      width: '350px',\n      data: tag\n    });\n    dialogRef.componentInstance.tagChange.subscribe(data => {\n      this.initTag();\n    });\n  }\n\n  supprimerTag(id: number): void {\n    this.tagService.deleteTag(id).subscribe(next => this.initTag());\n  }\n}\n","<div class=\"container\">\n  <button mat-raised-button (click)=\"creerTag()\">Créer un tag </button>\n  <table mat-table [dataSource]=\"this.dataSource\" matSort class=\"example-table\">\n    <ng-container matColumnDef=\"name\">\n      <th mat-header-cell *matHeaderCellDef mat-sort-header>Nom</th>\n      <td mat-cell *matCellDef=\"let tag\">{{tag.name}}</td>\n    </ng-container>\n    <ng-container matColumnDef=\"modifier\">\n      <th mat-header-cell *matHeaderCellDef>Modifier</th>\n      <td mat-cell *matCellDef=\"let tag\">\n        <button mat-fab color=\"primary\" aria-label=\"Build\" [value]=\"tag\" (click)=\"modifierTag(tag)\">\n          <mat-icon>build</mat-icon>\n        </button></td>\n    </ng-container>\n    <ng-container matColumnDef=\"supprimer\">\n      <th mat-header-cell *matHeaderCellDef>Supprimer</th>\n      <td mat-cell *matCellDef=\"let tag\">\n        <button mat-fab color=\"warn\" aria-label=\"Build\" [value]=\"tag\" (click)=\"supprimerTag(tag.id)\">\n          <mat-icon>delete</mat-icon>\n        </button></td>\n    </ng-container>\n    <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n    <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n  </table>\n  <mat-paginator [pageSizeOptions]=\"[5, 10, 20]\" showFirstLastButtons></mat-paginator>\n</div>\n","import { Injectable } from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport {Observable} from 'rxjs';\nimport {User} from '../model/user.model';\nimport {FormGroup} from '@angular/forms';\nimport {ServicePartage} from './service.partage';\n\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class UserService {\n  private URL = '/api/user';\n\n  constructor(private http: HttpClient, private servicePartage: ServicePartage) {\n    this.URL = servicePartage.BACKEND_URL + this.URL;\n  }\n\n  getUsers(): Observable<Array<User>> {\n    return this.http.get<Array<User>>(this.URL);\n  }\n\n  getUser(id: number): Observable<User> {\n    return this.http.get<User>(`${this.URL}/${id}`);\n  }\n\n  getMyProfil(userEmail: string): Observable<User> {\n    return this.http.get<User>(`${this.URL}/myprofil/${userEmail}`);\n  }\n\n  createUser(form: FormGroup): Observable < User> {\n    return this.http.post<User>(this.URL, form.value);\n  }\n\n  updateUser(form: FormGroup): Observable<User> {\n    return this.http.put<User>(`${this.URL}`, form.value);\n  }\n\n  deleteUser(id: number): Observable<User> {\n    return this.http.delete<User>(`${this.URL}/${id}`);\n  }\n\n}\n","import {Injectable} from '@angular/core';\r\nimport {HttpClient, HttpHeaders} from '@angular/common/http';\r\nimport {Observable} from 'rxjs';\r\n\r\nimport {JwtResponse} from './security/JwtReponse';\r\nimport {AuthLoginInfo} from './security/login-info';\r\nimport {ServicePartage} from './service.partage';\r\n\r\nconst httpOptions = {\r\n  headers: new HttpHeaders({ 'Content-Type': 'application/json' })\r\n};\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthService {\r\n\r\n  private URL = '/api/login';\r\n\r\n\r\n  constructor(private http: HttpClient, private servicePartage: ServicePartage) {\r\n    this.URL = servicePartage.BACKEND_URL + this.URL;\r\n  }\r\n\r\n  attemptAuth(credentials: AuthLoginInfo): Observable<JwtResponse> {\r\n    console.log(credentials);\r\n    return this.http.post<JwtResponse>(this.URL, credentials, httpOptions);\r\n  }\r\n}\r\n","import {AfterViewInit, Component, ViewChild} from '@angular/core';\nimport {Categorie} from '../../../model/categorie.model';\nimport {Router} from '@angular/router';\nimport {CategoriesService} from '../../../services/categorie.service';\nimport {MatDialog} from '@angular/material/dialog';\nimport {CategorieEditComponent} from '../../Categorie/categorie-edit/categorie-edit.component';\nimport {MatPaginator} from '@angular/material/paginator';\nimport {MatSort} from '@angular/material/sort';\nimport {MatTableDataSource} from '@angular/material/table';\nimport {merge} from 'rxjs';\nimport {startWith, switchMap} from 'rxjs/operators';\n\n\n\n\n@Component({\n  selector: 'app-admin-view-categorie-list',\n  templateUrl: './admin-view-categorie-list.component.html',\n  styleUrls: ['./admin-view-categorie-list.component.css']\n})\nexport class AdminViewCategorieListComponent implements  AfterViewInit {\n\n\n  displayedColumns: string[] = ['name', 'modifier', 'supprimer'];\n  isLoadingResults = true;\n  categories: Array<Categorie>;\n  dataSource = new MatTableDataSource<Categorie>();\n\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n  @ViewChild(MatSort) sort: MatSort;\n\n\n  constructor(private router: Router,\n              private categorieService: CategoriesService,\n              public dialog: MatDialog) {}\n\n  ngAfterViewInit(): void {\n   this.initCategories();\n   this.sort.sortChange.subscribe(() => this.paginator.pageIndex = 0);\n   merge(this.sort.sortChange, this.paginator.page).pipe(\n     startWith({}),\n     switchMap(() => {\n       return this.categorieService.getCategoriePage(this.paginator.pageIndex + 1, this.paginator.pageSize , this.sort.direction);\n     }));\n  }\n\n  private initCategories(): void {\n    this.categorieService.getCategoriePage(0, 30, 'DESC').subscribe(data => {\n        this.categories = data.content;\n        this.dataSource = new MatTableDataSource<Categorie>(this.categories);\n        this.dataSource.paginator = this.paginator;\n        this.dataSource.sort = this.sort;\n        console.log('data : ', data);\n      },\n      err => {\n        console.log('error: ', err.error.message);\n      });\n  }\n\n  creerCategorie(): void {\n    const dialogRef = this.dialog.open(CategorieEditComponent, {\n      width: '350px',\n      data: {}\n    });\n    dialogRef.afterClosed().subscribe(next => {\n      this.initCategories();\n    });\n  }\n\n  modifierCategorie(cat: Categorie): void {\n    const dialogRef = this.dialog.open(CategorieEditComponent, {\n      width: '350px',\n      data: cat\n    });\n    dialogRef.componentInstance.categorieChange.subscribe(data => {\n      this.initCategories();\n    });\n  }\n\n  supprimerCategorie(id: number): void {\n    this.categorieService.deleteCategorie(id).subscribe(next => this.initCategories());\n  }\n}\n\n","<div class=\"container\">\n  <button mat-raised-button (click)=\"creerCategorie()\">Créer une catégorie </button>\n  <table mat-table [dataSource]=\"this.dataSource\" matSort class=\"example-table\">\n    <ng-container matColumnDef=\"name\">\n      <th mat-header-cell *matHeaderCellDef mat-sort-header>Nom</th>\n      <td mat-cell *matCellDef=\"let categorie\">{{categorie.name}}</td>\n    </ng-container>\n    <ng-container matColumnDef=\"modifier\">\n      <th mat-header-cell *matHeaderCellDef>Modifier</th>\n      <td mat-cell *matCellDef=\"let categorie\">\n      <button mat-fab color=\"primary\" aria-label=\"Build\" [value]=\"categorie\" (click)=\"modifierCategorie(categorie)\">\n        <mat-icon>build</mat-icon>\n      </button></td>\n    </ng-container>\n    <ng-container matColumnDef=\"supprimer\">\n      <th mat-header-cell *matHeaderCellDef>Supprimer</th>\n      <td mat-cell *matCellDef=\"let categorie\">\n        <button mat-fab color=\"warn\" aria-label=\"Build\" [value]=\"categorie\" (click)=\"supprimerCategorie(categorie.id)\">\n          <mat-icon>delete</mat-icon>\n        </button></td>\n    </ng-container>\n    <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n    <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n  </table>\n  <mat-paginator [pageSizeOptions]=\"[5, 10, 20]\" showFirstLastButtons></mat-paginator>\n</div>\n","import {AfterViewInit, Component, OnInit, ViewChild} from '@angular/core';\n\nimport {MatTableDataSource} from '@angular/material/table';\nimport {MatPaginator} from '@angular/material/paginator';\nimport {MatSort} from '@angular/material/sort';\nimport {Router} from '@angular/router';\nimport {MatDialog} from '@angular/material/dialog';\nimport {merge} from 'rxjs';\nimport {startWith, switchMap} from 'rxjs/operators';\nimport {SousCategorie} from '../../../model/sous-categorie';\nimport {SousCategorieService} from '../../../services/sous-categorie.service';\nimport {SousCategorieEditComponent} from '../../Categorie/sous-categorie-edit/sous-categorie-edit.component';\n\n@Component({\n  selector: 'app-admin-view-sous-categorie-list',\n  templateUrl: './admin-view-sous-categorie-list.component.html',\n  styleUrls: ['./admin-view-sous-categorie-list.component.css']\n})\nexport class AdminViewSousCategorieListComponent implements AfterViewInit {\n\n  displayedColumns: string[] = ['name', 'modifier', 'supprimer'];\n  isLoadingResults = true;\n  sousCategories: Array<SousCategorie>;\n  dataSource = new MatTableDataSource<SousCategorie>();\n\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n  @ViewChild(MatSort) sort: MatSort;\n\n\n  constructor(private router: Router,\n              private sousCategorieService: SousCategorieService,\n              public dialog: MatDialog) {}\n\n  ngAfterViewInit(): void {\n    this.initSousCategories();\n    this.sort.sortChange.subscribe(() => this.paginator.pageIndex = 0);\n    merge(this.sort.sortChange, this.paginator.page).pipe(\n      startWith({}),\n      switchMap(() => {\n        return this.sousCategorieService.getSousCategoriePage(this.paginator.pageIndex + 1, this.paginator.pageSize , this.sort.direction);\n      }));\n  }\n\n  private initSousCategories(): void {\n    this.sousCategorieService.getSousCategoriePage(0, 30, 'DESC').subscribe(data => {\n        this.sousCategories = data.content;\n        this.dataSource = new MatTableDataSource<SousCategorie>(this.sousCategories);\n        this.dataSource.paginator = this.paginator;\n        this.dataSource.sort = this.sort;\n        console.log('data : ', data);\n      },\n      err => {\n        console.log('error: ', err.error.message);\n      });\n  }\n\n  creerSousCategorie(): void {\n    const dialogRef = this.dialog.open(SousCategorieEditComponent, {\n      width: '400px',\n      height: '300px',\n      data: {}\n    });\n    dialogRef.afterClosed().subscribe(next => {\n      this.initSousCategories();\n    });\n  }\n\n  modifierSousCategorie(cat: SousCategorie): void {\n    const dialogRef = this.dialog.open(SousCategorieEditComponent, {\n      width: '400px',\n      height: '300px',\n      data: cat\n    });\n    dialogRef.componentInstance.sousCategorieChange.subscribe(data => {\n      this.initSousCategories();\n    });\n  }\n\n  supprimerSousCategorie(id: number): void {\n    this.sousCategorieService.deleteSousCategorie(id).subscribe(next => this.initSousCategories());\n  }\n}\n","<div class=\"container\">\n  <button mat-raised-button (click)=\"creerSousCategorie()\">Créer une sous-catégorie </button>\n  <table mat-table [dataSource]=\"this.dataSource\" matSort class=\"example-table\">\n    <ng-container matColumnDef=\"name\">\n      <th mat-header-cell *matHeaderCellDef mat-sort-header>Nom</th>\n      <td mat-cell *matCellDef=\"let Souscategorie\">{{Souscategorie.name}}</td>\n    </ng-container>\n    <ng-container matColumnDef=\"modifier\">\n      <th mat-header-cell *matHeaderCellDef>Modifier</th>\n      <td mat-cell *matCellDef=\"let Souscategorie\">\n        <button mat-fab color=\"primary\" aria-label=\"Build\" [value]=\"Souscategorie\" (click)=\"modifierSousCategorie(Souscategorie)\">\n          <mat-icon>build</mat-icon>\n        </button></td>\n    </ng-container>\n    <ng-container matColumnDef=\"supprimer\">\n      <th mat-header-cell *matHeaderCellDef>Supprimer</th>\n      <td mat-cell *matCellDef=\"let Souscategorie\">\n        <button mat-fab color=\"warn\" aria-label=\"Build\" [value]=\"Souscategorie\" (click)=\"supprimerSousCategorie(Souscategorie.id)\">\n          <mat-icon>delete</mat-icon>\n        </button></td>\n    </ng-container>\n    <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n    <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n  </table>\n  <mat-paginator [pageSizeOptions]=\"[5, 10, 20]\" showFirstLastButtons></mat-paginator>\n</div>\n","import {Component, EventEmitter, Inject, Input, OnInit, Output} from '@angular/core';\nimport {FormBuilder, FormGroup, Validators} from '@angular/forms';\nimport {ActivatedRoute, Router} from '@angular/router';\nimport {MAT_DIALOG_DATA, MatDialogRef} from '@angular/material/dialog';\nimport {Tag} from '../../../model/tag.model';\nimport {TagService} from '../../../services/tag.service';\n\n@Component({\n  selector: 'app-tag-edit',\n  templateUrl: './tag-edit.component.html',\n  styleUrls: ['./tag-edit.component.css']\n})\nexport class TagEditComponent implements OnInit {\n\n  forms: FormGroup;\n  @Input()\n  tag: Tag;\n  @Output()\n  tagChange = new EventEmitter();\n\n  constructor(private router: Router,\n              private formBuilder: FormBuilder,\n              private activatedRoute: ActivatedRoute,\n              private tagService: TagService,\n              public dialogRef: MatDialogRef<TagEditComponent>,\n              @Inject(MAT_DIALOG_DATA) public data: any) { }\n\n  ngOnInit(): void {\n    this.initForm();\n    if (this.data.id != null) {\n      this.patchValue(this.data.id);\n    }\n  }\n\n  private initForm(): void {\n    this.forms = this.formBuilder.group({\n      id: [''],\n      name: ['', Validators.required],\n      description: ['', Validators.required],\n    });\n  }\n\n  private patchValue(id: number): void {\n    this.tagService.getTag(id).subscribe( data => {\n      this.tag = data;\n      this.forms.patchValue({\n        id: data.id,\n        name: data.name,\n        description: data.description\n      });\n    });\n  }\n\n  onSubmit(): void {\n    if (this.forms.invalid) {\n      this.forms.markAllAsTouched();\n      return;\n    }\n    if (!this.tag || this.tag.id == null) {\n      console.log('tag: ', this.tag);\n      this.tagService.createTag(this.forms).subscribe(\n        next => {\n          this.tagChange.emit(next);\n          this.dialogRef.close();\n        });\n    } else {\n      this.tagService.updateTag(this.forms).subscribe(\n        next => {\n          this.tagChange.emit(next);\n        });\n    }\n  }\n\n}\n","                          <h2 mat-dialog-title *ngIf=\"tag == null\">Ajouter un tag</h2>\n<h2 mat-dialog-title *ngIf=\"tag\">Modifier une tag</h2>\n<mat-dialog-content>\n  <form [formGroup]=\"forms\" (ngSubmit)=\"onSubmit()\">\n    <mat-form-field class=\"example-full-width\">\n      <mat-label>Nom:</mat-label>\n      <input matInput placeholder=\"Nom\" formControlName=\"name\">\n      <mat-error [hidden]=\"forms.get('name').valid || !forms.get('name').touched\">\n        Le <strong>nom</strong> du tag doit être renseigné.\n      </mat-error>\n    </mat-form-field>\n\n    <mat-form-field class=\"col-md-12\">\n      <mat-label>Description:</mat-label>\n      <textarea matInput type=\"text\" placeholder=\"Description\" formControlName=\"description\"></textarea>\n      <mat-error [hidden]=\"forms.get('description').valid || !forms.get('description').touched\">\n        La<strong> description </strong>du tag doit être renseignée.\n      </mat-error>\n    </mat-form-field>\n\n    <div mat-dialog-actions>\n      <button mat-button color=\"warn\" [mat-dialog-close]>Annuler</button>\n      <button mat-button color=\"accent\" (click)=\"onSubmit()\" [hidden]=\"forms.invalid\" [mat-dialog-close]>Sauvegarder</button>\n    </div>\n  </form>\n</mat-dialog-content>\n","import {Stock} from './stock.model';\n\nexport class Variant {\n  id: number;\n  produitId: number;\n  name: string;\n  imageUrlOnSelect: any;\n  imageUrlNonSelect: any;\n  prix: number;\n  prixKg: number;\n  prixReduction: number;\n  stock: Stock;\n}\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'front';\n}\n","<header>\n  <app-header></app-header>\n</header>\n\n<main>\n  <app-menu></app-menu>\n  <router-outlet></router-outlet>\n</main>\n\n<footer>\n  <app-footer></app-footer>\n</footer>\n","import {Component, Input, OnInit} from '@angular/core';\nimport {Produit} from '../../../model/produit.model';\nimport {ProduitService} from '../../../services/produit.service';\nimport {VariantService} from '../../../services/variant.service';\nimport {Variant} from '../../../model/variant.model';\nimport {ActivatedRoute} from '@angular/router';\nimport {TagService} from '../../../services/tag.service';\nimport {Tag} from '../../../model/tag.model';\n\n@Component({\n  selector: 'app-view-product',\n  templateUrl: './view-product.component.html',\n  styleUrls: ['./view-product.component.css']\n})\nexport class ViewProductComponent implements OnInit {\n\n  produit: Produit;\n  variants: Array<Variant>;\n  tags: Array<Tag>;\n  variantSelected: Variant;\n  quantite: number;\n\n  // tslint:disable-next-line:max-line-length\n  constructor(private activatedRoute: ActivatedRoute, private produitService: ProduitService, private variantService: VariantService, private tagService: TagService) {\n  }\n\n  ngOnInit(): void {\n    this.activatedRoute.queryParams.subscribe(\n      (params) => {\n        const id = params.id;\n        console.log('id:', params.id);\n        if (id) {\n          this.initProduit(id);\n          this.initVariants(id);\n        }\n      });\n    this.quantite = 0;\n  }\n\n  private initProduit(id: number): void {\n    this.produitService.getProduit(id).subscribe(data => {\n      this.produit = data;\n    });\n  }\n\n  private initVariants(id: number): void {\n    this.variantService.getVariantsByProduitId(id).subscribe(data => {\n      this.variants = data;\n    });\n  }\n\n   selectVariant(variant: Variant): void {\n     this.variantSelected = variant;\n     if (this.variantSelected) {\n       this.quantite = 0;\n     }\n   }\n\n     changeQuantity(quantity: number): void {\n       if ((this.quantite === 0 && quantity < 0) || !this.variantSelected) {\n       return;\n     }\n       this.quantite += quantity;\n   }\n\n  private afficherPrix(prix: number): string {\n    const formatter = new Intl.NumberFormat('fr-FR', {\n      style: 'currency',\n      currency: 'EUR',\n    });\n    return formatter.format(prix);\n  }\n}\n","<div class=\"wrapper\" *ngIf=\"produit != null\">\n  <div class=\"topWrapper\">\n    <div class=\"imageProduit\" >\n      <img src=\"{{produit.urlGrandePhoto}}\">\n    </div>\n\n    <div class=\"sideText\">\n      <div class=\"title\">\n        <h1>{{produit.name}}</h1>\n      </div>\n\n      <hr>\n\n      <div class=\"producteur\">\n        <p>{{produit.producteur}}<p>\n      </div>\n\n      <div class=\"tagArea\">\n        <div class=\"tag\" *ngFor=\"let tag of produit.tags\">\n          <app-tag-chips label=\"{{tag.name}}\"></app-tag-chips>\n        </div>\n      </div>\n\n      <div class=\"variantArea\">\n        <div class=\"prix\" *ngIf=\"variantSelected\">\n          <p> {{this.afficherPrix(variantSelected.prix)}}  les {{variantSelected.name}}</p>\n        </div>\n\n        <div class=\"prixKG\" *ngIf=\"variantSelected\">\n          <p>{{this.afficherPrix(variantSelected.prixKg)}}/Kilo</p>\n        </div>\n\n        <div class=\"variant\" *ngFor=\"let variant of variants\">\n          <app-petit-bouton (click)=\"selectVariant(variant)\" [selected]=\"this.variantSelected === variant\" label=\"{{variant.name}}\"></app-petit-bouton>\n        </div>\n      </div>\n\n      <div class=\"panierSelecteur\">\n        <app-petit-bouton class=\"buttonRemove\" label=\"-\" [selected]=\"true\" (click)=\"changeQuantity(-1)\" fontSize=\"40px\"></app-petit-bouton>\n        <p class=\"quantitée\">{{quantite}}</p>\n        <app-petit-bouton class=\"buttonAdd\" label=\"+\" [selected]=\"true\" (click)=\"changeQuantity(1)\" fontSize=\"40px\"></app-petit-bouton>\n        <app-bouton class=\"Panier\" label=\"Ajouter au panier\"></app-bouton>\n      </div>\n\n      <div class=\"contenantFraisOrigine\">\n        <div class=\"contenant\">\n          <p class=\"top\">Contenant</p>\n          <p class=\"bot\">Livré dans un sachet kraft compostable. </p>\n        </div>\n        <div class=\"FraisLivraison\">\n          <p class=\"top\">Frais de livraison</p>\n          <p class=\"bot\">Livraison offerte à partir de 44€  </p>\n        </div>\n        <div class=\"origine\">\n          <p class=\"top\">Origine</p>\n          <p class=\"bot\">{{produit.origine}}</p>\n        </div>\n      </div>\n\n      <div class=\"descriptionProduit\">\n        <h2>Description</h2>\n        <p>{{produit.descriptionProduit}}</p>\n      </div>\n\n      <div class=\"commentaireProduit\">\n        <p>{{produit.commentaireProduit}}</p>\n      </div>\n    </div>\n  </div>\n\n  <div class=\"bottomWrapper\">\n    <hr>\n    <div class=\"conseil\">\n      <mat-accordion>\n        <mat-expansion-panel>\n          <mat-expansion-panel-header>\n            <mat-panel-title>\n              Conseil d'utilisation et de préparation\n            </mat-panel-title>\n          </mat-expansion-panel-header>\n          <p>{{produit.conseilUtilisation}}</p>\n        </mat-expansion-panel>\n      </mat-accordion>\n    </div>\n    <hr>\n    <div class=\"composition\">\n      <mat-accordion>\n        <mat-expansion-panel>\n          <mat-expansion-panel-header>\n            <mat-panel-title>\n              Composition\n            </mat-panel-title>\n          </mat-expansion-panel-header>\n          <p>{{produit.composition}}</p>\n        </mat-expansion-panel>\n      </mat-accordion>\n    </div>\n    <hr>\n    <div class=\"pourquoi?\">\n      <mat-accordion>\n        <mat-expansion-panel>\n          <mat-expansion-panel-header>\n            <mat-panel-title>\n              Pourquoi ce produit ?\n            </mat-panel-title>\n          </mat-expansion-panel-header>\n          <p>{{produit.pourquoi}}</p>\n        </mat-expansion-panel>\n      </mat-accordion>\n    </div>\n    <hr>\n    <div class=\"producteur\">\n      <mat-accordion>\n        <mat-expansion-panel>\n          <mat-expansion-panel-header>\n            <mat-panel-title>\n              Le producteur\n            </mat-panel-title>\n          </mat-expansion-panel-header>\n          <p>{{produit.commentaireProducteur}}</p>\n        </mat-expansion-panel>\n      </mat-accordion>\n    </div>\n    <hr>\n    <div class=\"valeurs\">\n      <mat-accordion>\n        <mat-expansion-panel>\n          <mat-expansion-panel-header>\n            <mat-panel-title>\n              Valeurs et allergènes\n            </mat-panel-title>\n          </mat-expansion-panel-header>\n          <p>{{produit.allergenes}}</p>\n        </mat-expansion-panel>\n      </mat-accordion>\n    </div>\n    <hr>\n    <div class=\"infoNutri\">\n      <mat-accordion>\n        <mat-expansion-panel>\n          <mat-expansion-panel-header>\n            <mat-panel-title>\n              Informations nutritionnelles\n            </mat-panel-title>\n          </mat-expansion-panel-header>\n          <p>{{produit.infoNutrition}}</p>\n        </mat-expansion-panel>\n      </mat-accordion>\n    </div>\n    <hr>\n  </div>\n</div>\n","import {Component, EventEmitter, Inject, Input, OnInit, Output} from '@angular/core';\nimport {ActivatedRoute, Router} from '@angular/router';\nimport {FormBuilder, FormGroup, Validators} from '@angular/forms';\nimport {MAT_DIALOG_DATA, MatDialogRef} from '@angular/material/dialog';\nimport {Variant} from '../../../model/variant.model';\nimport {Stock} from '../../../model/stock.model';\nimport {VariantService} from '../../../services/variant.service';\n\n@Component({\n  selector: 'app-variant-edit',\n  templateUrl: './variant-edit.component.html',\n  styleUrls: ['./variant-edit.component.css']\n})\nexport class VariantEditComponent implements OnInit {\n\n  variant: Variant;\n  forms: FormGroup;\n  isChecked: true;\n  stock = Stock;\n  stockKeys = Object.keys(this.stock);\n  @Output()\n  variantChange = new EventEmitter();\n\n  constructor(private router: Router,\n              private formBuilder: FormBuilder,\n              private activatedRoute: ActivatedRoute,\n              private variantService: VariantService,\n              public dialogRef: MatDialogRef<VariantEditComponent>,\n              @Inject(MAT_DIALOG_DATA) public data: Variant) { }\n\n  ngOnInit(): void {\n    this.initForm();\n  }\n\n  private initForm(): void {\n    this.forms = this.formBuilder.group({\n      id: '',\n      produitId: this.data.produitId,\n      name: ['', Validators.required],\n      prix: ['', Validators.required],\n      prixKg: ['', Validators.required],\n      stock: Stock,\n      // imageUrlOnSelect: ['', Validators.required],\n      // imageUrlNonSelect: ['', Validators.required],\n    });\n    if (this.data && this.data.id) {\n      this.variantService.getVariant(this.data.produitId, this.data.id).subscribe(data => {\n        this.variant = data;\n        this.forms.patchValue({\n          id: data.id,\n          produitId: data.produitId,\n          name: data.name,\n          prix: data.prix,\n          prixKg: data.prixKg,\n          stock: data.stock,\n          // imageUrlOnSelect: data.imageUrlOnSelect,\n          // imageUrlNonSelect: data.imageUrlNonSelect,\n        });\n      });\n    }\n  }\n\n  onSubmit(): void {\n    if (this.forms.invalid) {\n      this.forms.markAllAsTouched();\n      return;\n    }\n    if (!this.variant || this.variant.id == null) {\n      this.variantService.createVariant(this.forms).subscribe(\n        next => {\n          this.variantChange.emit(next);\n          this.dialogRef.close();\n        });\n    } else {\n      this.variantService.updateVariant(this.forms).subscribe(\n        next => {\n          this.variantChange.emit(next);\n        });\n    }\n  }\n\n  updateStock(stock: any): void {\n    this.forms.patchValue({\n      stock\n    });\n  }\n\n}\n","<h2 mat-dialog-title *ngIf=\"data == null\">Ajouter un variant de produit</h2>\n<h2 mat-dialog-title *ngIf=\"data\">Modifier un variant de produit</h2>\n\n<mat-dialog-content>\n  <form [formGroup]=\"forms\" (ngSubmit)=\"onSubmit()\">\n    <mat-form-field class=\"col-12\">\n      <mat-label>Nom:</mat-label>\n      <input matInput placeholder=\"Nom\" formControlName=\"name\">\n      <mat-error [hidden]=\"forms.get('name').valid || !forms.get('name').touched\">\n        Le <strong>nom</strong> du variant produit doit être renseigné.\n      </mat-error>\n    </mat-form-field>\n\n    <mat-form-field class=\"example-full-width col-6\">\n      <mat-label>Prix:</mat-label>\n      <input matInput type=\"number\" placeholder=\"Prix\" formControlName=\"prix\">\n      <mat-error [hidden]=\"forms.get('prix').valid || !forms.get('prix').touched\">\n        Le <strong>prix</strong> du produit doit être renseigné.\n      </mat-error>\n    </mat-form-field>\n\n    <mat-form-field class=\"example-full-width col-6\">\n      <mat-label>Prix au KG:</mat-label>\n      <input matInput type=\"number\" placeholder=\"Prix KG\" formControlName=\"prixKg\">\n      <mat-error [hidden]=\"forms.get('prixKg').valid || !forms.get('prixKg').touched\">\n        Le <strong>prix au KG</strong> du produit doit être renseigné.\n      </mat-error>\n    </mat-form-field>\n\n    <mat-form-field appearance=\"fill\" class=\"col-6\">\n      <mat-label>Stock</mat-label>\n      <mat-select>\n        <mat-option *ngFor=\"let st of stockKeys\"  (onSelectionChange)=\"updateStock(st)\" [value]=\"stock[st]\">{{stock[st].toString()}}</mat-option>\n      </mat-select>\n      <mat-error [hidden]=\"forms.get('stock').valid || !forms.get('stock').touched\">\n        L'état du<strong> stock </strong>du produit doit être renseignée.\n      </mat-error>\n    </mat-form-field>\n\n    <mat-dialog-actions>\n      <button mat-button color=\"warn\" [mat-dialog-close]>Annuler</button>\n      <button mat-button color=\"accent\" (click)=\"onSubmit()\" [disabled]=\"forms.invalid\" [mat-dialog-close]>Sauvegarder</button>\n    </mat-dialog-actions>\n  </form>\n</mat-dialog-content>\n","import {Component, Input, OnInit} from '@angular/core';\n\n@Component({\n  selector: 'app-petit-bouton',\n  templateUrl: './petit-bouton.component.html',\n  styleUrls: ['./petit-bouton.component.css']\n})\nexport class PetitBoutonComponent implements OnInit {\n  @Input()\n  label: string;\n  @Input()\n  fontSize: any;\n  @Input()\n  selected: boolean;\n\n  constructor() { }\n\n  ngOnInit(): void {\n    console.log(this.selected);\n  }\n\n}\n","<div class=\"custom-little-button\">\n  <button *ngIf=\"!selected ? true : false\" class=\"customized-little-button\" style=\"font-size: {{fontSize || '14px'}}\">{{label}}</button>\n  <button *ngIf=\"selected === true\" class=\"customized-little-button clicked\" style=\"font-size: {{fontSize || '14px'}}\">{{label}}</button>\n</div>\n","import {Injectable} from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport {Observable} from 'rxjs';\nimport {FormGroup} from '@angular/forms';\nimport {Type} from '../model/type.model';\nimport {ServicePartage} from './service.partage';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TypeService {\n\n  private URL = '/api/produits/types';\n\n  constructor(private http: HttpClient, private servicePartage: ServicePartage) {\n    this.URL = servicePartage.BACKEND_URL + this.URL;\n  }\n\n  getTypes(): Observable<Array<Type>> {\n    return this.http.get<Array<Type>>(this.URL);\n  }\n\n  getType(id: number): Observable<Type> {\n    return this.http.get<Type>(`${this.URL}/${id}`);\n  }\n\n  getTypePage(page: number, size: number, sort: string): Observable<any> {\n    return this.http.get<any>(`${this.URL}/xxx?page=${page}&size=${size}&sort=${sort}`);\n  }\n\n  createType(form: FormGroup): Observable < Type> {\n    console.log('form:', form.value);\n    return this.http.post<Type>(this.URL, form.value);\n  }\n\n  updateType(form: FormGroup): Observable<Type> {\n    return this.http.put<Type>(`${this.URL}`, form.value);\n  }\n\n  deleteType(id: number): Observable<Type> {\n    return this.http.delete<Type>(`${this.URL}/${id}`);\n  }\n}\n","import {SousCategorie} from './sous-categorie';\n\nexport class Categorie {\n  id: number;\n  name: string;\n  sousCategories: Array<SousCategorie>;\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppComponent } from './app.component';\nimport { ProduitEditComponent } from './Produit/produit-edit/produit-edit.component';\nimport { AdresseEditComponent } from './Adresse/adresse-edit/adresse-edit.component';\nimport { CommandeEditComponent } from './Commande/commande-edit/commande-edit.component';\nimport { PanierEditComponent } from './Panier/panier-edit/panier-edit.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport {MatToolbarModule} from '@angular/material/toolbar';\nimport {MatIconModule} from '@angular/material/icon';\nimport {MatButtonModule} from '@angular/material/button';\nimport {RouterModule} from '@angular/router';\nimport {AppRoutingModule} from './app-routing.module';\nimport {HttpClientModule} from '@angular/common/http';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport { AdminViewProductComponent } from './Admin/admin-view-product/admin-view-product.component';\nimport { MenuComponent } from './Menu/menu/menu.component';\nimport {MatMenuModule} from '@angular/material/menu';\nimport { LoginComponent } from './Auth/login/login.component';\nimport { CreateUserComponent } from './User/create-user/create-user.component';\nimport { AccueilComponent } from './Accueil/accueil/accueil.component';\nimport {httpInterceptorProviders} from '../services/security/auth-interceptor.service';\nimport {CommonModule} from '@angular/common';\nimport { CategorieEditComponent } from './Categorie/categorie-edit/categorie-edit.component';\nimport { TypeEditComponent } from './Type/type-edit/type-edit.component';\nimport { AdminViewTypesListComponent } from './Admin/admin-view-types-list/admin-view-types-list.component';\nimport { AdminViewCategorieListComponent } from './Admin/admin-view-categorie-list/admin-view-categorie-list.component';\nimport { ModalConfirmComponent } from './Modal/modal-confirm/modal-confirm.component';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport {MatFormFieldModule} from '@angular/material/form-field';\nimport {MatInputModule} from '@angular/material/input';\nimport {MatNativeDateModule, MatRippleModule} from '@angular/material/core';\nimport {MatDialogModule} from '@angular/material/dialog';\nimport {MatTableModule} from '@angular/material/table';\nimport {MatPaginatorModule} from '@angular/material/paginator';\nimport {MatSortModule} from '@angular/material/sort';\nimport {MatSelectModule} from '@angular/material/select';\nimport {MatCheckboxModule} from '@angular/material/checkbox';\nimport {MatListModule} from '@angular/material/list';\nimport {MatCardModule} from '@angular/material/card';\nimport {CookieService} from 'ngx-cookie-service';\nimport { HeaderComponent } from './Header/header/header.component';\nimport { TagEditComponent } from './Tags/tag-edit/tag-edit.component';\nimport { LabelEditComponent } from './Label/label-edit/label-edit.component';\nimport { AdminViewTagComponent } from './Admin/admin-view-tag/admin-view-tag.component';\nimport { FooterComponent } from './Footer/footer.component';\nimport {AdminViewLabelComponent} from './Admin/admin-view-label/admin-view-label.component';\nimport { AdminViewSousCategorieListComponent } from './Admin/admin-view-sous-categorie-list/admin-view-sous-categorie-list.component';\nimport { SousCategorieEditComponent } from './Categorie/sous-categorie-edit/sous-categorie-edit.component';\nimport { AdminViewVariantComponent } from './Admin/admin-view-variant/admin-view-variant.component';\nimport { VariantEditComponent } from './Variant/variant-edit/variant-edit.component';\nimport { ReductionEditComponent } from './Reduction/reduction-edit/reduction-edit.component';\nimport {MatDatepickerModule} from '@angular/material/datepicker';\nimport {MatExpansionModule} from '@angular/material/expansion';\nimport { ViewProductComponent } from './Produit/view-product/view-product.component';\nimport { BoutonComponent } from './Utils/bouton/bouton.component';\nimport { PetitBoutonComponent } from './Utils/petit-bouton/petit-bouton.component';\nimport { SousMenuComponent } from './Menu/sous-menu/sous-menu.component';\nimport { CarteProduitComponent } from './Utils/carteProduit/carte-produit/carte-produit.component';\nimport { ViewAllProductsComponent } from './Produit/view-all-product/view-all-products/view-all-products.component';\nimport { TagChipsComponent } from './Utils/tag-chips/tag-chips.component';\nimport { MySpaceComponent } from './User/my-space/my-space.component';\nimport { MySpaceSelectorComponent } from './User/my-space-selector/my-space-selector.component';\nimport {MatRadioModule} from '@angular/material/radio';\nimport {SousCategorieService} from '../services/sous-categorie.service';\nimport {ServicePartage} from '../services/service.partage';\n\n\n\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    ProduitEditComponent,\n    AdresseEditComponent,\n    CommandeEditComponent,\n    PanierEditComponent,\n    AdminViewProductComponent,\n    MenuComponent,\n    LoginComponent,\n    CreateUserComponent,\n    AccueilComponent,\n    CategorieEditComponent,\n    TypeEditComponent,\n    AdminViewTypesListComponent,\n    AdminViewCategorieListComponent,\n    ModalConfirmComponent,\n    HeaderComponent,\n    TagEditComponent,\n    LabelEditComponent,\n    AdminViewTagComponent,\n    FooterComponent,\n    AdminViewLabelComponent,\n    AdminViewSousCategorieListComponent,\n    SousCategorieEditComponent,\n    AdminViewVariantComponent,\n    VariantEditComponent,\n    ReductionEditComponent,\n    ViewProductComponent,\n    BoutonComponent,\n    PetitBoutonComponent,\n    SousMenuComponent,\n    CarteProduitComponent,\n    ViewAllProductsComponent,\n    TagChipsComponent,\n    MySpaceComponent,\n    MySpaceSelectorComponent,\n  ],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    MatToolbarModule,\n    MatCheckboxModule,\n    MatRadioModule,\n    MatListModule,\n    MatIconModule,\n    MatExpansionModule,\n    MatButtonModule,\n    MatMenuModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatRippleModule,\n    MatDialogModule,\n    MatDatepickerModule,\n    MatNativeDateModule,\n    RouterModule,\n    AppRoutingModule,\n    HttpClientModule,\n    FormsModule,\n    ReactiveFormsModule,\n    CommonModule,\n    NgbModule,\n    MatTableModule,\n    MatPaginatorModule,\n    MatSortModule,\n    MatSelectModule,\n    MatCardModule,\n  ],\n  providers: [httpInterceptorProviders, CookieService, ServicePartage],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import {Component, EventEmitter, Inject, Input, OnInit, Output} from '@angular/core';\nimport {FormBuilder, FormGroup, Validators} from '@angular/forms';\nimport {SousCategorie} from '../../../model/sous-categorie';\nimport {ActivatedRoute, Router} from '@angular/router';\nimport {SousCategorieService} from '../../../services/sous-categorie.service';\nimport {MAT_DIALOG_DATA, MatDialogRef} from '@angular/material/dialog';\n\n@Component({\n  selector: 'app-sous-categorie-edit',\n  templateUrl: './sous-categorie-edit.component.html',\n  styleUrls: ['./sous-categorie-edit.component.css']\n})\nexport class SousCategorieEditComponent implements OnInit {\n\n  forms: FormGroup;\n  @Input()\n  sousCategorie: SousCategorie;\n  @Output()\n  sousCategorieChange = new EventEmitter();\n\n  constructor(\n    private router: Router,\n    private formBuilder: FormBuilder,\n    private activatedRoute: ActivatedRoute,\n    private sousCategorieService: SousCategorieService,\n    public dialogRef: MatDialogRef<SousCategorieEditComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: any) { }\n\n  ngOnInit(): void {\n    this.initForm();\n    if (this.data.id != null) {\n      this.patchValue(this.data.id);\n    }\n  }\n\n  private initForm(): void {\n    this.forms = this.formBuilder.group({\n      id: [''],\n      name: ['', Validators.required],\n    });\n  }\n\n  private patchValue(id): void {\n    this.sousCategorieService.getSousCategorie(id).subscribe( data => {\n      this.sousCategorie = data;\n      this.forms.patchValue({\n        id: data.id,\n        name: data.name,\n      });\n    });\n  }\n\n  onSubmit(): void {\n    if (this.forms.invalid) {\n      this.forms.markAllAsTouched();\n      return;\n    }\n    if (!this.sousCategorie || this.sousCategorie.id == null) {\n      this.sousCategorieService.createSousCategorie(this.forms).subscribe(\n        next => {\n          this.sousCategorieChange.emit(next);\n          this.dialogRef.close();\n        });\n    } else {\n      this.sousCategorieService.updateSousCategorie(this.forms).subscribe(\n        next => {\n          this.sousCategorieChange.emit(next);\n        });\n    }\n  }\n}\n","<h2 mat-dialog-title *ngIf=\"sousCategorie == null\">Ajouter une sous-categorie</h2>\n<h2 mat-dialog-title *ngIf=\"sousCategorie\">Modifier une sous-categorie</h2>\n<br>\n<mat-dialog-content>\n  <form [formGroup]=\"forms\" (ngSubmit)=\"onSubmit()\">\n    <mat-form-field class=\"example-full-width\">\n      <mat-label>Nom:</mat-label>\n      <input matInput placeholder=\"Nom\" formControlName=\"name\">\n      <mat-error [hidden]=\"forms.get('name').valid || !forms.get('name').touched\">\n        Le <strong>nom</strong> de la sous-catégorie doit être renseigné.\n      </mat-error>\n    </mat-form-field>\n    <div mat-dialog-actions>\n      <button mat-button color=\"warn\" [mat-dialog-close]>Annuler</button>\n      <button mat-button color=\"accent\" (click)=\"onSubmit()\" [hidden]=\"forms.invalid\" [mat-dialog-close]>Sauvegarder</button>\n    </div>\n  </form>\n</mat-dialog-content>\n\n","import {Injectable} from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport {Observable} from 'rxjs';\nimport {Categorie} from '../model/categorie.model';\nimport {FormGroup} from '@angular/forms';\nimport {ServicePartage} from './service.partage';\n\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CategoriesService {\n\n  private URL = '/api/produits/categories';\n\n  constructor(private http: HttpClient, private servicePartage: ServicePartage) {\n    this.URL = servicePartage.BACKEND_URL + this.URL;\n  }\n\n  getCategories(): Observable<Array<Categorie>> {\n    return this.http.get<Array<Categorie>>(`${this.URL}`);\n  }\n\n  // todo : changer le lien, et le nom une fois les modifs faites\n  getCategoriePage(page: number, size: number, sort: string): Observable<any> {\n    return this.http.get<any>(`${this.URL}/xxx?page=${page}&size=${size}&sort=${sort}`);\n  }\n\n  getCategorie(id: number): Observable<Categorie> {\n    return this.http.get<Categorie>(`${this.URL}/${id}`);\n  }\n\n  createCategorie(form: FormGroup): Observable < Categorie> {\n    console.log('categorie', form.value);\n    return this.http.post<Categorie>(this.URL, form.value);\n  }\n\n  updateCategorie(form: FormGroup): Observable<Categorie> {\n    console.log('categorie', form.value);\n    return this.http.put<Categorie>(`${this.URL}`, form.value);\n  }\n\n  deleteCategorie(id: number): Observable<Categorie> {\n    return this.http.delete<Categorie>(`${this.URL}/${id}`);\n  }\n}\n","import {Injectable} from '@angular/core';\r\n\r\n@Injectable()\r\nexport class ServicePartage  {\r\n  public BACKEND_URL = 'http://localhost:8181';\r\n}\r\n","import { Component, OnInit } from '@angular/core';\nimport {FormBuilder, FormControl, FormGroup, Validators} from '@angular/forms';\nimport {User} from '../../../model/user.model';\nimport {UserService} from '../../../services/user.service';\nimport {AuthService} from '../../../services/auth.service';\nimport {Router} from '@angular/router';\n\n@Component({\n  selector: 'app-create-user',\n  templateUrl: './create-user.component.html',\n  styleUrls: ['./create-user.component.css']\n})\nexport class CreateUserComponent implements OnInit {\n\n  forms: FormGroup;\n  user: User;\n  private messageError: string;\n\n  constructor(private formBuilder: FormBuilder, private userService: UserService,\n              private authService: AuthService, private router: Router) { }\n\n  ngOnInit(): void {\n    this.initform();\n  }\n\n  private initform(): void {\n    this.forms = this.formBuilder.group(\n      {\n        nom: new FormControl(),\n        prenom: new FormControl(),\n        anniversaire: new FormControl(),\n        email: new FormControl('', Validators.compose([\n          Validators.required,\n          Validators.pattern('[A-Za-z0-9._%-]+@[A-Za-z0-9._%-]+\\\\.[a-z]{2,3}')\n        ])),\n        telephone: new FormControl('', Validators.compose([\n          Validators.required,\n          Validators.pattern('^[0-9]{10}$')\n        ])),\n        password: new FormControl(),\n      });\n  }\n\n  saveUser(): void {\n    console.log(this.forms.value);\n    this.userService.createUser(this.forms)\n      .subscribe(\n        response => {\n          console.log('response: ', response);\n        },\n        err => {\n          console.log('Error: ', err.error.message);\n          this.messageError = err.error.message;\n        });\n\n    this.router.navigate(['/login']);\n  }\n}\n\n","<br>\n<div class=\"container\">\n  <div class=\"row\">\n    <div class=\"col-lg-12\">\n      <div class=\"well-block\">\n        <div class=\"well-title\">\n\n\n          <div class=\"card\">\n            <div class=\"card-header\" style=\"text-align: center\"><h3>Créer votre profil utilisateur :</h3></div>\n          </div>\n\n          <form [formGroup]=\"forms\" (ngSubmit)=\"saveUser()\">\n            <br>\n            <div class=\"row\">\n\n              <div class=\"col-md-6\">\n                <div class=\"form-group\"\n                     [class.has-success]=\"forms.get('prenom').valid\"\n                     [class.has-error]=\"forms.get('prenom').invalid && forms.get('prenom').touched\">\n                  <div class=\"alert alert-danger\" [hidden]=\"forms.get('prenom').valid || !forms.get('prenom').touched\">Le prénom doit posséder au moins 2 lettres.</div>\n                  <mat-label class=\"control-label\">Prénom:</mat-label>\n                  <input class=\"form-control\"\n                         type=\"text\"\n                         name=\"prenom\"\n                         placeholder=\"prenom\"\n                         formControlName=\"prenom\"\n                         required minlength=\"2\">\n                </div>\n              </div>\n\n              <div class=\"col-md-6\">\n                <div class=\"form-group\"\n                     [class.has-success]=\"forms.get('nom').valid\"\n                     [class.has-error]=\"forms.get('nom').invalid && forms.get('nom').touched\">\n                  <div class=\"alert alert-danger\" [hidden]=\"forms.get('nom').valid || !forms.get('nom').touched\">Le nom doit posséder au moins 2 lettres.</div>\n                  <label class=\"control-label\">Nom:</label>\n                  <input class=\"form-control input-md\"\n                         type=\"text\"\n                         name=\"nom\"\n                         placeholder=\"Nom\"\n                         formControlName=\"nom\"\n                         required\n                         minlength=\"2\">\n                </div>\n              </div>\n            </div>\n\n            <div class=\"row\">\n              <div class=\"col-md-6\">\n                <div class=\"form-group\"\n                     [class.has-success]=\"forms.get('anniversaire').valid\"\n                     [class.has-error]=\"forms.get('anniversaire').invalid && forms.get('anniversaire').touched\">\n                  <div class=\"alert alert-danger\" [hidden]=\"forms.get('anniversaire').valid || !forms.get('anniversaire').touched\">La date de naissance doit être renseignée.</div>\n                  <label class=\"control-label\">Date de Naissance:</label>\n                  <input class=\"form-control input-md\"\n                         type=\"Date\"\n                         name=\"Date de Naissance\"\n                         placeholder=\"anniversaire\"\n                         formControlName=\"anniversaire\"\n                         autocapitalize=\"on\"\n                         spellcheck=\"on\"\n                         required/>\n                </div>\n              </div>\n\n              <div class=\"col-md-6\">\n                <div class=\"form-group\"\n                     [class.has-success]=\"forms.get('telephone').valid\"\n                     [class.has-error]=\"forms.get('telephone').invalid && forms.get('telephone').touched\">\n                  <div class=\"alert alert-danger\" [hidden]=\"forms.get('telephone').valid || !forms.get('telephone').touched\">Le numéro de telephone doit être composé de 10 chiffres.</div>\n                  <label class=\"control-label\">Numéro de télételephone:</label>\n                  <input class=\"form-control input-md\"\n                         type=\"text\"\n                         name=\"telephone\"\n                         minlength=\"10\"\n                         maxlength=\"10\"\n                         placeholder=\"Numéro de telephone\"\n                         formControlName=\"telephone\"\n                         required>\n                </div>\n\n              </div>\n            </div>\n\n\n\n            <div class=\"row\">\n              <div class=\"col-md-12\">\n                <div class=\"form-group\"\n                     [class.has-success]=\"forms.get('email').valid\"\n                     [class.has-error]=\"forms.get('email').invalid && forms.get('email').touched\">\n                  <div class=\"alert alert-danger\" [hidden]=\"forms.get('email').valid || !forms.get('email').touched\">L'adresse email doit être valide (xx@xx.xx)</div>\n                  <label for=\"email\" class=\"control-label\">Email:</label>\n                  <input required\n                         id=\"email\"\n                         name=\"email\"\n                         type=\"email\"\n                         class=\"form-control\"\n                         formControlName=\"email\"\n                         placeholder=\"Email\">\n                </div>\n              </div>\n            </div>\n\n            <div class=\"row\">\n              <div class=\"col-md-6\">\n                <div class=\"form-group\"\n                     [class.has-success]=\"forms.get('password').valid\"\n                     [class.has-error]=\"forms.get('password').invalid && forms.get('password').touched\">\n                  <div class=\"alert alert-danger\" [hidden]=\"forms.get('password').valid || !forms.get('password').touched\">Le password doit contenir au moins 6 caractères ou chiffres.</div>\n                  <label class=\"control-label\">Mot de passe:</label>\n                  <input class=\"form-control input-md\"\n                         type=\"password\"\n                         name=\"password\"\n                         placeholder=\"Mot de passe\"\n                         formControlName=\"password\"\n                         minlength=\"6\"\n                         required>\n                </div>\n              </div>\n            </div>\n\n            <br>\n\n            <div class=\"col-md-12\" align=\"right\">\n              <div class=\"form-group\">\n                <button\n                  type=\"submit\"\n                class=\"btn btn-primary\" [disabled]=\"forms.invalid\">Valider\n                </button>\n              </div>\n            </div>\n          </form>\n\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n\n","import {Component, Input, OnInit} from '@angular/core';\nimport {ReductionService} from '../../../services/reduction.service';\nimport {Router} from '@angular/router';\nimport {FormBuilder, FormControl, FormGroup, Validators} from '@angular/forms';\nimport {Reduction} from '../../../model/reduction.model';\n\n\n\n\n\n@Component({\n  selector: 'app-reduction-edit',\n  templateUrl: './reduction-edit.component.html',\n  styleUrls: ['./reduction-edit.component.css']\n})\nexport class ReductionEditComponent implements OnInit {\n\n  @Input()\n  produitId;\n  reduction: Reduction;\n  forms: FormGroup;\n\n\n  constructor(private router: Router, private formBuilder: FormBuilder,\n              private reductionService: ReductionService) {\n  }\n\n  ngOnInit(): void {\n    this.initForm();\n    this.patchValue();\n  }\n\n  private initForm(): void {\n    this.forms = this.formBuilder.group({\n      id: '',\n      produitID: this.produitId,\n      pourcentageRemise: ['', Validators.required],\n      reductionStart: [new FormControl(new Date()), Validators.required],\n      reductionEnd: [new FormControl(new Date()), Validators.required],\n    });\n  }\n\n  private patchValue(): void {\n    this.reductionService.getReduction(this.produitId).subscribe(data => {\n      this.reduction = data;\n      this.forms.patchValue({\n        id: data.id,\n        produitID: data.produitID,\n        pourcentageRemise: data.pourcentageRemise,\n        reductionStart: data.reductionStart,\n        reductionEnd: data.reductionEnd\n      });\n    });\n  }\n\n  onSubmit(): void {\n    if (this.forms.invalid) {\n      console.log(this.forms.valid);\n      this.forms.markAllAsTouched();\n      return;\n    }\n    if (!this.reduction || this.reduction.id == null) {\n      this.reductionService.createReduction(this.forms).subscribe(\n        next => {\n          console.log('form to create:', this.forms);\n          this.router.navigate(['admin/products/edit'],  { queryParams: {id: this.produitId}});\n        });\n    } else {\n      this.reductionService.updateReduction(this.forms).subscribe(\n        next => {\n          this.router.navigate(['admin/products/edit'],  { queryParams: {id: this.produitId}});\n        });\n    }\n  }\n\n  SupprimerReduction(produitId, id): void {\n    this.reductionService.deleteReduction(this.produitId, this.reduction.id).subscribe(next => {\n      this.router.navigate(['admin/products/edit'],  { queryParams: {id: this.produitId}});\n    });\n  }\n}\n","<div class=\"container\">\n  <form [formGroup]=\"forms\">\n    <h2 mat-dialog-title *ngIf=\"reduction == null\">Ajouter une reduction</h2>\n    <h2 mat-dialog-title *ngIf=\"reduction != null\">Modifier une reduction</h2>\n\n    <mat-form-field color=\"accent\" appearance=\"fill\">\n      <mat-label>Date de début:</mat-label>\n      <input matInput formControlName=\"reductionStart\"[matDatepicker]=\"start\">\n      <mat-datepicker-toggle matSuffix [for]=\"start\"></mat-datepicker-toggle>\n      <mat-datepicker #start></mat-datepicker>\n      <mat-error [hidden]=\"forms.get('reductionStart').valid || !forms.get('reductionStart').touched\">\n        La<strong>date</strong> du début de la réduction doit être renseignée.\n      </mat-error>\n    </mat-form-field>\n\n    <mat-form-field color=\"accent\" appearance=\"fill\">\n      <mat-label>Date de fin:</mat-label>\n      <input matInput formControlName=\"reductionEnd\"[matDatepicker]=\"end\">\n      <mat-datepicker-toggle matSuffix [for]=\"end\"></mat-datepicker-toggle>\n      <mat-datepicker #end></mat-datepicker>\n      <mat-error [hidden]=\"forms.get('reductionEnd').valid || !forms.get('reductionEnd').touched\">\n        La<strong>date</strong> de fin de la réduction doit être renseignée.\n      </mat-error>\n    </mat-form-field>\n\n    <mat-form-field class=\"example-full-width col-4\">\n      <mat-label>Pourcentage de la remise:</mat-label>\n      <input matInput type=\"number\" placeholder=\"Pourcentage de remise\" formControlName=\"pourcentageRemise\">\n      <mat-error [hidden]=\"forms.get('pourcentageRemise').valid || !forms.get('pourcentageRemise').touched\">\n        Le <strong>pourcentage</strong> de la reduction du produit doit être renseigné.\n      </mat-error>\n    </mat-form-field>\n\n    <mat-dialog-actions>\n      <button mat-button color=\"warn\" *ngIf=\"this.reduction != null && this.reduction.id\" (click)=\"SupprimerReduction(this.produitId, this.reduction.id)\">Supprimer la reduction</button>\n      <button mat-button color=\"accent\" (click)=\"onSubmit()\">Sauvegarder</button>\n    </mat-dialog-actions>\n  </form>\n</div>\n","import {Component, EventEmitter, Inject, Input, OnInit, Output} from '@angular/core';\nimport {FormArray, FormBuilder, FormControl, FormGroup, Validators} from '@angular/forms';\nimport {Type} from '../../../model/type.model';\nimport {ActivatedRoute, Router} from '@angular/router';\nimport {TypeService} from '../../../services/type.service';\nimport {Categorie} from '../../../model/categorie.model';\nimport {CategoriesService} from '../../../services/categorie.service';\nimport {MAT_DIALOG_DATA, MatDialogRef} from '@angular/material/dialog';\n\n@Component({\n  selector: 'app-type-edit',\n  templateUrl: './type-edit.component.html',\n  styleUrls: ['./type-edit.component.css']\n})\nexport class TypeEditComponent implements OnInit {\n\n  @Input()\n  type: Type;\n  forms: FormGroup;\n  categorieList: Array<Categorie>;\n  categories: FormGroup;\n  isChecked: true;\n  @Output()\n  typeChange = new EventEmitter();\n\n  constructor(private router: Router,\n              private formBuilder: FormBuilder,\n              private activatedRoute: ActivatedRoute,\n              private typeService: TypeService,\n              private categorieService: CategoriesService,\n              public dialogRef: MatDialogRef<TypeEditComponent>,\n              @Inject(MAT_DIALOG_DATA) public data: any) {\n  }\n\n  ngOnInit(): void {\n    this.initForm();\n    this.initCategories();\n    if (this.data.id != null) {\n      this.patchValue(this.data.id);\n    }\n  }\n\n  private initForm(): void {\n    this.forms = this.formBuilder.group({\n      id: '',\n      name: ['', Validators.required],\n      categories: this.formBuilder.array([])\n    });\n  }\n\n  private patchValue(id: number): void {\n    this.typeService.getType(id).subscribe(data => {\n      this.type = data;\n      this.forms.patchValue({\n        id: data.id,\n        name: data.name,\n        categories: data.categories\n      });\n      const categories: FormArray = this.forms.get('categories') as FormArray;\n      this.type.categories.forEach(e => categories.push(new FormControl(e)));\n    });\n  }\n\n  private initCategories(): void {\n    this.categorieService.getCategories().subscribe(\n      data => this.categorieList = data);\n  }\n\n  private createCategorie(): void {\n    this.categories = this.formBuilder.group({\n      id: ['', Validators.required],\n      name: ['', Validators.required],\n    });\n  }\n\n  onSubmit(): void {\n    if (this.forms.invalid) {\n      this.forms.markAllAsTouched();\n      return;\n    }\n    if (!this.type || this.type.id == null) {\n      this.typeService.createType(this.forms).subscribe(\n        next => {\n          this.typeChange.emit(next);\n        });\n    } else {\n      this.typeService.updateType(this.forms).subscribe(\n        next => this.typeChange.emit(next)\n      );\n    }\n  }\n\n  // tslint:disable-next-line:typedef\n  onCheckboxChange(e) {\n    const categories: FormArray = this.forms.get('categories') as FormArray;\n    const value = e.source.value;\n    if (e.checked) {\n      categories.push(new FormControl(value));\n    }\n    else {\n      let i = 0 ;\n      categories.controls.forEach((item: FormControl) => {\n        console.log('value from formarray: ', item.value, ' value from checkbox: ', value, ' = ? ', item.value.id === value.id);\n        if (item.value.id === value.id) {\n          categories.removeAt(i);\n          return;\n        }\n        i++;\n      });\n    }\n    console.log('after pushing: ', categories);\n  }\n\n  // tslint:disable-next-line:typedef\n  isContain(categories: Array<Categorie>, categorie: Categorie) {\n    return categories.map(t => t.name).includes((categorie.name));\n  }\n}\n","<h2 mat-dialog-title *ngIf=\"type == null\">Ajouter un type de produit</h2>\n<h2 mat-dialog-title *ngIf=\"type\">Modifier un type de produit</h2>\n<mat-dialog-content>\n  <form [formGroup]=\"forms\">\n    <mat-form-field class=\"example-full-width\">\n      <mat-label>Nom:</mat-label>\n      <input matInput placeholder=\"Nom\" formControlName=\"name\">\n      <mat-error [hidden]=\"forms.get('name').valid || !forms.get('name').touched\">\n        Le <strong>nom</strong> du type de produit doit être renseigné.\n      </mat-error>\n    </mat-form-field>\n\n    <mat-list>\n      <mat-list-item class=\"row col-md-12\" *ngFor=\"let categorie of categorieList; let i=index\">\n        <mat-checkbox class=\"example-margin\"\n                      [value]=\"categorie\"\n                      [checked]=\"this.type && isContain(this.type.categories, categorie)\"\n                      (change)=\"onCheckboxChange($event)\">{{categorie.name}}\n        </mat-checkbox>\n      </mat-list-item>\n    </mat-list>\n    <mat-dialog-actions>\n      <button mat-button color=\"warn\" [mat-dialog-close]>Annuler</button>\n      <button mat-button color=\"accent\" (click)=\"onSubmit()\" [hidden]=\"forms.invalid\" [mat-dialog-close]>Sauvegarder</button>\n    </mat-dialog-actions>\n  </form>\n</mat-dialog-content>\n\n\n\n","import {Component, EventEmitter, Inject, Input, OnInit, Output} from '@angular/core';\nimport {FormArray, FormBuilder, FormControl, FormGroup, Validators} from '@angular/forms';\nimport {Categorie} from '../../../model/categorie.model';\nimport {SousCategorie} from '../../../model/sous-categorie';\nimport {ActivatedRoute, Router} from '@angular/router';\nimport {CategoriesService} from '../../../services/categorie.service';\nimport {SousCategorieService} from '../../../services/sous-categorie.service';\nimport {MAT_DIALOG_DATA, MatDialogRef} from '@angular/material/dialog';\n\n\n@Component({\n  selector: 'app-categorie-edit',\n  templateUrl: './categorie-edit.component.html',\n  styleUrls: ['./categorie-edit.component.css']\n})\nexport class CategorieEditComponent implements OnInit {\n\n  categorie: Categorie;\n  forms: FormGroup;\n  sousCategorieList: Array<SousCategorie>;\n  sousCategories: FormGroup;\n  isChecked: true;\n  @Output()\n  categorieChange = new EventEmitter();\n\n  constructor(private router: Router,\n              private formBuilder: FormBuilder,\n              private activatedRoute: ActivatedRoute,\n              private categorieService: CategoriesService,\n              private sousCategorieService: SousCategorieService,\n              public dialogRef: MatDialogRef<CategorieEditComponent>,\n              @Inject(MAT_DIALOG_DATA) public data: Categorie) { }\n\n  ngOnInit(): void {\n    this.categorie = this.data;\n    this.initForm();\n    this.initSousCategories();\n  }\n\n  private initForm(): void {\n    this.forms = this.formBuilder.group({\n      id: '',\n      name: ['', Validators.required],\n      sousCategories: this.formBuilder.array([])\n    });\n    if (this.categorie && this.categorie.id) {\n      this.categorieService.getCategorie(this.categorie.id).subscribe( data => {\n        this.categorie = data;\n        this.forms.patchValue({\n          id: data.id,\n          name: data.name,\n          sousCategories: data.sousCategories\n        });\n        const sousCategories: FormArray = this.forms.get('sousCategories') as FormArray;\n        data.sousCategories.forEach(e => sousCategories.push(new FormControl(e)));\n        console.log(this.forms);\n      });\n    }\n  }\n\n  private initSousCategories(): void {\n    this.sousCategorieService.getSousCategories().subscribe(\n      data => {\n        this.sousCategorieList = data;\n      });\n  }\n\n  onSubmit(): void {\n    if (this.forms.invalid) {\n      this.forms.markAllAsTouched();\n      return;\n    }\n    if (!this.data || this.data.id == null) {\n      this.categorieService.createCategorie(this.forms).subscribe(\n        next => {\n          this.categorieChange.emit(next);\n          this.dialogRef.close();\n        });\n    } else {\n      console.log(this.forms);\n      this.categorieService.updateCategorie(this.forms).subscribe(\n        next => {\n          this.categorieChange.emit(next);\n        });\n    }\n  }\n\n  // tslint:disable-next-line:typedef\n  onCheckboxChange(e) {\n    const sousCategories: FormArray = this.forms.get('sousCategories') as FormArray;\n    const value = e.source.value;\n    if (e.checked) {\n      sousCategories.push(new FormControl(value));\n    } else {\n      let i = 0;\n      sousCategories.controls.forEach((item: FormControl) => {\n        if (item.value.id === value.id) {\n          sousCategories.removeAt(i);\n          return;\n        }\n        i++;\n      });\n    }\n    console.log('after pushing: ', sousCategories);\n  }\n\n  // tslint:disable-next-line:typedef\n  isContain(sousCategories: Array<SousCategorie>, sousCategorie: SousCategorie) {\n    return sousCategories.map(t => t.name).includes((sousCategorie.name));\n  }\n\n}\n","<h2 mat-dialog-title *ngIf=\"categorie == null\">Ajouter une categorie</h2>\n<h2 mat-dialog-title *ngIf=\"categorie\">Modifier une categorie</h2>\n\n<mat-dialog-content>\n  <form [formGroup]=\"forms\" (ngSubmit)=\"onSubmit()\">\n    <mat-form-field class=\"example-full-width\">\n      <mat-label>Nom:</mat-label>\n      <input matInput placeholder=\"Nom\" formControlName=\"name\">\n      <mat-error [hidden]=\"forms.get('name').valid || !forms.get('name').touched\">\n        Le <strong>nom</strong> de la catégorie de produit doit être renseigné.\n      </mat-error>\n    </mat-form-field>\n    <mat-list>\n      <mat-list-item class=\"row col-md-12\" *ngFor=\"let sousCategorie of sousCategorieList; let i=index\">\n        <mat-checkbox class=\"example-margin\"\n                      [value]=\"sousCategorie\"\n                      [checked]=\"isContain(this.categorie?.sousCategories || [], sousCategorie)\"\n                      (change)=\"onCheckboxChange($event)\">{{sousCategorie.name}}\n        </mat-checkbox>\n      </mat-list-item>\n    </mat-list>\n    <mat-dialog-actions>\n      <button mat-button color=\"warn\" [mat-dialog-close]>Annuler</button>\n      <button mat-button color=\"accent\" (click)=\"onSubmit()\" [disabled]=\"forms.invalid\" [mat-dialog-close]>Sauvegarder</button>\n    </mat-dialog-actions>\n  </form>\n</mat-dialog-content>\n","import { Injectable } from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport {Observable} from 'rxjs';\nimport {Reduction} from '../model/reduction.model';\nimport {FormGroup} from '@angular/forms';\nimport {ServicePartage} from './service.partage';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ReductionService {\n  private URL = '/api/produits/';\n\n  constructor(private http: HttpClient, private servicePartage: ServicePartage) {\n    this.URL = servicePartage.BACKEND_URL + this.URL;\n  }\n\n  getReductions(): Observable<Array<Reduction>> {\n    return this.http.get<Array<Reduction>>(this.URL);\n  }\n\n  getReduction(produitID: number): Observable<Reduction> {\n    return this.http.get<Reduction>(`${this.URL}${produitID}/reduction`);\n  }\n\n  getReductionPage(page: number, size: number, sort: string): Observable<any> {\n    return this.http.get<any>(`${this.URL}/xxx?page=${page}&size=${size}&sort=${sort}`);\n  }\n\n  createReduction(form: FormGroup): Observable < Reduction> {\n    console.log('form:', form.value);\n    return this.http.post<Reduction>(`${this.URL}${form.getRawValue().produitID}/reduction`, form.value);\n  }\n\n  updateReduction(form: FormGroup): Observable<Reduction> {\n    return this.http.put<Reduction>(`${this.URL}${form.getRawValue().produitID}/reduction`, form.value);\n  }\n\n  deleteReduction(produitID: number, id: number): Observable<Reduction> {\n    return this.http.delete<Reduction>(`${this.URL}${produitID}/reduction/${id}`);\n  }\n}\n","import {AfterViewInit, Component, ViewChild} from '@angular/core';\nimport {Produit} from '../../../model/produit.model';\nimport {Router} from '@angular/router';\nimport {ProduitService} from '../../../services/produit.service';\nimport {MatTableDataSource} from '@angular/material/table';\nimport {MatPaginator} from '@angular/material/paginator';\nimport {merge} from 'rxjs';\nimport {startWith, switchMap} from 'rxjs/operators';\nimport {MatSort} from '@angular/material/sort';\nimport {MatDialog} from '@angular/material/dialog';\n\n@Component({\n  selector: 'app-admin-view-product',\n  templateUrl: './admin-view-product.component.html',\n  styleUrls: ['./admin-view-product.component.css']\n})\nexport class AdminViewProductComponent implements AfterViewInit {\n\n  produit: Produit;\n  produits: Array<Produit>;\n  displayedColumns: string[] = ['name', 'type', 'categorie', 'modifier', 'supprimer'];\n  dataSource = new MatTableDataSource<Produit>();\n\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n  @ViewChild(MatSort) sort: MatSort;\n\n  constructor(private router: Router, private produitService: ProduitService, public dialog: MatDialog) { }\n\n  ngAfterViewInit(): void {\n    this.initProduits();\n    this.sort.sortChange.subscribe(() => this.paginator.pageIndex = 0);\n    merge(this.sort.sortChange, this.paginator.page).pipe(\n      startWith({}),\n      switchMap(() => {\n        return this.produitService.getProduitPage(this.paginator.pageIndex + 1, this.paginator.pageSize , this.sort.direction);\n      }));\n  }\n\n  private initProduits(): void {\n    this.produitService.getProduitPage(0, 30, 'DESC').subscribe(data => {\n        this.produits = data.content;\n        this.dataSource = new MatTableDataSource<Produit>(this.produits);\n        this.dataSource.paginator = this.paginator;\n        this.dataSource.sort = this.sort;\n        console.log('data : ', data);\n      },\n      err => {\n        console.log('error: ', err.error.message);\n      });\n  }\n\n  creerProduit(): void {\n    this.router.navigate(['admin/products/edit']);\n  }\n\n  modifierProduit(id: number): void {\n    this.router.navigate(['admin/products/edit'], {queryParams: {id}});\n  }\n\n  supprimerProduit(id: number): void {\n    this.produitService.deleteProduit(id).subscribe( next => this.initProduits()); }\n}\n","<div class=\"container\">\n  <button mat-raised-button (click)=\"creerProduit()\">Créer un produit</button>\n  <table mat-table [dataSource]=\"this.dataSource\" matSort class=\"example-table\">\n    <ng-container matColumnDef=\"name\">\n      <th mat-header-cell *matHeaderCellDef mat-sort-header>Nom</th>\n      <td mat-cell *matCellDef=\"let produit\">{{produit.name}}</td>\n    </ng-container>\n    <ng-container matColumnDef=\"type\">\n      <th mat-header-cell *matHeaderCellDef mat-sort-header>Type</th>\n      <td mat-cell *matCellDef=\"let produit\">{{produit.type.name}}</td>\n    </ng-container>\n    <ng-container matColumnDef=\"categorie\">\n      <th mat-header-cell *matHeaderCellDef mat-sort-header>Categorie</th>\n      <td mat-cell *matCellDef=\"let produit\">{{produit.categorie.name}}</td>\n    </ng-container>\n    <ng-container matColumnDef=\"modifier\">\n      <th mat-header-cell *matHeaderCellDef>Modifier</th>\n      <td mat-cell *matCellDef=\"let produit\">\n        <button mat-fab color=\"primary\" aria-label=\"Build\" [value]=\"\" (click)=\"modifierProduit(produit.id)\">\n          <mat-icon>build</mat-icon>\n        </button></td>\n    </ng-container>\n    <ng-container matColumnDef=\"supprimer\">\n      <th mat-header-cell *matHeaderCellDef>Supprimer</th>\n      <td mat-cell *matCellDef=\"let produit\">\n        <button mat-fab color=\"warn\" aria-label=\"Build\" [value]=\"produit\" (click)=\"supprimerProduit(produit.id)\">\n          <mat-icon>delete</mat-icon>\n        </button></td>\n    </ng-container>\n    <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n    <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n  </table>\n  <mat-paginator [pageSizeOptions]=\"[5, 10, 20]\" showFirstLastButtons></mat-paginator>\n</div>\n","import {HTTP_INTERCEPTORS, HttpHandler, HttpInterceptor, HttpRequest} from '@angular/common/http';\r\nimport {Injectable} from '@angular/core';\r\n\r\nimport {TokenStorageService} from './token-storage.service';\r\n\r\nconst TOKEN_HEADER_KEY = 'Authorization';\r\n\r\n@Injectable()\r\nexport class AuthInterceptor implements HttpInterceptor {\r\n\r\n  constructor(private token: TokenStorageService) { }\r\n\r\n  // tslint:disable-next-line:typedef\r\n  intercept(req: HttpRequest<any>, next: HttpHandler) {\r\n    let authReq = req;\r\n    const token = this.token.getToken();\r\n    if (token != null) {\r\n      authReq = req.clone({ headers: req.headers.set(TOKEN_HEADER_KEY, 'Bearer ' + token) });\r\n    }\r\n    return next.handle(authReq);\r\n  }\r\n}\r\n\r\nexport const httpInterceptorProviders = [\r\n  { provide: HTTP_INTERCEPTORS, useClass: AuthInterceptor, multi: true }\r\n];\r\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-commande-edit',\n  templateUrl: './commande-edit.component.html',\n  styleUrls: ['./commande-edit.component.css']\n})\nexport class CommandeEditComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>commande-edit works!</p>\n","import {Component, Input, OnInit, ViewChild} from '@angular/core';\nimport {Variant} from '../../../model/variant.model';\nimport {MatTableDataSource} from '@angular/material/table';\nimport {MatPaginator} from '@angular/material/paginator';\nimport {MatSort} from '@angular/material/sort';\nimport {Router} from '@angular/router';\nimport {VariantService} from '../../../services/variant.service';\nimport {MatDialog} from '@angular/material/dialog';\n\nimport {VariantEditComponent} from '../../Variant/variant-edit/variant-edit.component';\n\n@Component({\n  selector: 'app-admin-view-variant',\n  templateUrl: './admin-view-variant.component.html',\n  styleUrls: ['./admin-view-variant.component.css']\n})\nexport class AdminViewVariantComponent implements OnInit {\n\n  @Input() produitId;\n\n  displayedColumns: string[] = ['name', 'modifier', 'supprimer'];\n  variants: Array<Variant>;\n  dataSource = new MatTableDataSource<Variant>();\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n  @ViewChild(MatSort) sort: MatSort;\n\n\n  constructor(private router: Router,\n              private variantService: VariantService,\n              public dialog: MatDialog) {}\n\n  ngOnInit(): void {\n    this.initVariants();\n    }\n\n  private initVariants(): void {\n    this.variantService.getVariantsByProduitId(this.produitId).subscribe(data => {\n        this.variants = data;\n        this.dataSource = new MatTableDataSource<Variant>(this.variants);\n        this.dataSource.paginator = this.paginator;\n        this.dataSource.sort = this.sort;\n      },\n      err => {\n        console.log('error: ', err.error.message);\n      });\n  }\n\n  creerVariant(): void {\n    const variant = new Variant();\n    variant.produitId = this.produitId;\n    const dialogRef = this.dialog.open(VariantEditComponent, {\n      width: '800',\n      height: '600',\n      data: variant\n    });\n    dialogRef.afterClosed().subscribe(next => {\n      this.initVariants();\n    });\n  }\n\n  modifierVariant(variant: Variant): void {\n    const dialogRef = this.dialog.open(VariantEditComponent, {\n      width: '800',\n      height: '600',\n      data: variant\n    });\n    dialogRef.componentInstance.variantChange.subscribe(data => {\n      this.initVariants();\n    });\n  }\n\n  supprimerVariant(id: number): void {\n    this.variantService.deleteVariant(this.produitId, id).subscribe(next => this.initVariants());\n  }\n}\n","<div class=\"container\">\n  <button mat-raised-button (click)=\"creerVariant()\">Créer un variant </button>\n  <table mat-table [dataSource]=\"this.dataSource\" matSort class=\"example-table\">\n\n    <ng-container matColumnDef=\"name\">\n      <th mat-header-cell *matHeaderCellDef mat-sort-header>Nom</th>\n      <td mat-cell *matCellDef=\"let variant\">{{variant.name}}</td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"modifier\">\n      <th mat-header-cell *matHeaderCellDef>Modifier</th>\n      <td mat-cell *matCellDef=\"let variant\">\n        <button mat-fab color=\"primary\" aria-label=\"Build\" [value]=\"variant\" (click)=\"modifierVariant(variant)\">\n          <mat-icon>build</mat-icon>\n        </button></td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"supprimer\">\n      <th mat-header-cell *matHeaderCellDef>Supprimer</th>\n      <td mat-cell *matCellDef=\"let variant\">\n        <button mat-fab color=\"warn\" aria-label=\"Build\" [value]=\"variant\" (click)=\"supprimerVariant(variant.id)\">\n          <mat-icon>delete</mat-icon>\n        </button></td>\n    </ng-container>\n\n    <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n    <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n  </table>\n</div>\n<br>\n","import {Component, Inject, Input, OnInit, Output, EventEmitter} from '@angular/core';\nimport {FormBuilder, FormGroup, Validators} from '@angular/forms';\nimport {Label} from '../../../model/label';\nimport {ActivatedRoute, Router} from '@angular/router';\nimport {LabelService} from '../../../services/label.service';\nimport {MAT_DIALOG_DATA, MatDialogRef} from '@angular/material/dialog';\n\n\n@Component({\n  selector: 'app-tags-categorie-edit',\n  templateUrl: './label-edit.component.html',\n  styleUrls: ['./label-edit.component.css']\n})\nexport class LabelEditComponent implements OnInit {\n\n  forms: FormGroup;\n  @Output()\n  labelChange = new EventEmitter();\n\n  constructor(private router: Router,\n              private formBuilder: FormBuilder,\n              private activatedRoute: ActivatedRoute,\n              private labelService: LabelService,\n              public dialogRef: MatDialogRef<LabelEditComponent>,\n              @Inject(MAT_DIALOG_DATA) public label: Label) {\n  }\n\n  ngOnInit(): void {\n    this.initForm();\n    if (this.label.id != null) {\n      this.patchValue(this.label.id);\n    }\n  }\n //todo: refactor les objets simples ainsi, les composés ont besoin du this.... = label\n  private initForm(): void {\n    this.forms = this.formBuilder.group({\n      id: this.label?.id || '',\n      name: [this.label?.name || '' , Validators.required],\n      urlPhoto: [this.label?.urlPhoto || '']\n    });\n  }\n\n  private patchValue(id: number): void {\n    this.labelService.getLabel(id).subscribe(label => {\n      this.forms.patchValue({\n        id: label.id,\n        name: label.name,\n        urlPhoto: label.urlPhoto\n      });\n    });\n  }\n\n  onSubmit(): void {\n    if (this.forms.invalid) {\n      this.forms.markAllAsTouched();\n      return;\n    }\n    if (!this.label || this.label.id == null) {\n      console.log('label form up:', this.forms, this.label);\n      this.labelService.createLabel(this.forms).subscribe(\n        next => {\n          this.labelChange.emit(next);\n          this.dialogRef.close();\n        });\n    } else {\n      this.labelService.updateLabel(this.forms).subscribe(\n        next => {\n          this.labelChange.emit(next);\n        }\n      );\n    }\n  }\n\n  uploadPhoto(e): void {\n    console.log(e.target);\n    const file = e.target.files.length ? e.target.files[0] : null;\n    if (file) {\n      this.labelService.uploadPhoto(file).subscribe( data => {\n        this.forms.patchValue({urlPhoto: data.urlPhoto});\n      });\n    }\n  }\n}\n","<h2 mat-dialog-title *ngIf=\"label == null\">Ajouter un label</h2>\n<h2 mat-dialog-title *ngIf=\"label\">Modifier un label</h2>\n<mat-dialog-content>\n  <form [formGroup]=\"forms\" (ngSubmit)=\"onSubmit()\">\n    <mat-form-field class=\"example-full-width\">\n      <mat-label>Nom:</mat-label>\n      <input matInput placeholder=\"Nom\" formControlName=\"name\">\n      <mat-error [hidden]=\"forms.get('name').valid || !forms.get('name').touched\">\n        Le <strong>nom</strong> du label doit être renseigné.\n      </mat-error>\n    </mat-form-field>\n\n    <div class=\"photo-selecteur\">\n      <label>Photo: 54 x 54 px</label>\n      <input (change)=\"uploadPhoto($event)\" class=\"ng-hide\"  multiple type=\"file\"/>\n      <img src=\"{{forms.controls.urlPhoto.value}}\" *ngIf=\"forms.controls.urlPhoto && forms.controls.urlPhoto.value\">\n    </div>\n\n    <mat-dialog-actions>\n      <button mat-button color=\"warn\" [mat-dialog-close]>Annuler</button>\n      <button mat-button color=\"accent\" (click)=\"onSubmit()\" [disabled]=\"forms.invalid\" [mat-dialog-close]>Sauvegarder</button>\n    </mat-dialog-actions>\n  </form>\n</mat-dialog-content>\n","import {Component, EventEmitter, Inject, Input, OnInit, Output} from '@angular/core';\nimport {Adresse} from '../../../model/adresse.model';\nimport {FormBuilder, FormGroup, Validators} from '@angular/forms';\nimport {ActivatedRoute, Router} from '@angular/router';\nimport {AdresseService} from '../../../services/adresse.service';\nimport {MAT_DIALOG_DATA, MatDialogRef} from '@angular/material/dialog';\nimport {User} from '../../../model/user.model';\n\n\n@Component({\n  selector: 'app-adresse-edit',\n  templateUrl: './adresse-edit.component.html',\n  styleUrls: ['./adresse-edit.component.css']\n})\nexport class AdresseEditComponent implements OnInit {\n\n  @Input()\n  adresse: Adresse;\n\n  forms: FormGroup;\n  user: User;\n\n  @Output()\n  addressChange = new EventEmitter();\n\n\n  constructor(private router: Router,\n              private formBuilder: FormBuilder,\n              private activatedRoute: ActivatedRoute,\n              private adresseService: AdresseService,\n              public dialogRef: MatDialogRef<AdresseEditComponent>,\n              @Inject(MAT_DIALOG_DATA) public data: any) { }\n\n  ngOnInit(): void {\n    this.initFrom();\n    if (this.data.id != null) { this.patchValue(this.data.id); }\n  }\n\n  private initFrom(): void {\n    this.forms = this.formBuilder.group({\n      nom: ['', Validators.required],\n      numero: ['', Validators.required],\n      voie: ['', Validators.required],\n      codePostal: ['', Validators.required],\n      ville: ['', Validators.required],\n      batiment: [''],\n      digicode: [''],\n      interphone: [''],\n      etage: ['', Validators.required],\n      porte: ['', Validators.required]\n    });\n  }\n\n\n  private patchValue(id: any): void {\n    this.adresseService.getAdresse(id).subscribe( data => {\n      this.adresse = data;\n      this.forms.patchValue({\n        id: data.id,\n        nom: data.nom,\n        numero: data.numero,\n        voie: data.voie,\n        codePostal: data.codePostal,\n        ville: data.ville,\n        batiment: data.batiment,\n        digicode: data.digicode,\n        interphone: data.interphone,\n        etage: data.etage,\n        porte: data.porte\n      });\n    });\n  }\n\n  onSubmit(): void {\n    if (this.forms.invalid) {\n      this.forms.markAllAsTouched();\n      return;\n    }\n    if (!this.adresse || this.adresse.id == null) {\n      this.adresseService.createAdresse(this.forms).subscribe(\n        next => {\n          this.addressChange.emit(next);\n          this.dialogRef.close();\n        }\n      );\n    } else {\n      this.adresseService.updateAdresse(this.forms).subscribe(\n        next => {\n          this.addressChange.emit(next);\n        }\n      );\n    }\n  }\n}\n","<h2 mat-dialog-title *ngIf=\"adresse == null\">Ajouter une adresse a mon carnet</h2>\n<h2 mat-dialog-title *ngIf=\"adresse\">Modifier une adresse</h2>\n\n<mat-dialog-content>\n  <form [formGroup]=\"forms\" (ngSubmit)=\"onSubmit()\">\n    <div class=\"row\">\n    <mat-form-field class=\"example-full-width col-10\">\n      <mat-label>Nom:</mat-label>\n      <input matInput type=\"text\" placeholder=\"Nom\" formControlName=\"nom\">\n      <mat-error [hidden]=\"forms.get('nom').valid || !forms.get('nom').touched\">\n        Le <strong>nom</strong> de l'adresse doit être renseigné.\n      </mat-error>\n    </mat-form-field>\n    </div>\n\n    <div class=\"row\">\n    <mat-form-field class=\"example-full-width col-4\">\n      <mat-label>Numéro:</mat-label>\n      <input matInput type=\"number\" placeholder=\"Numero\" formControlName=\"numero\">\n      <mat-error [hidden]=\"forms.get('numero').valid || !forms.get('numero').touched\">\n        Le <strong>numéro</strong> de l'adresse doit être renseigné.\n      </mat-error>\n    </mat-form-field>\n\n    <mat-form-field class=\"example-full-width col-6\">\n      <mat-label>Voie:</mat-label>\n      <input matInput type=\"text\" placeholder=\"rue de Paris, avenue des Champs-Elysées\" formControlName=\"voie\">\n      <mat-error [hidden]=\"forms.get('voie').valid || !forms.get('voie').touched\">\n        La <strong>voie</strong> de l'adresse doit être renseignée (ex: rue,avenue..).\n      </mat-error>\n    </mat-form-field>\n    </div>\n\n    <div class=\"row\">\n    <mat-form-field class=\"example-full-width col-4\">\n      <mat-label>Code postal:</mat-label>\n      <input matInput type=\"text\" placeholder=\"Code postal\" formControlName=\"codePostal\">\n      <mat-error [hidden]=\"forms.get('codePostal').valid || !forms.get('codePostal').touched\">\n        Le <strong>code postal</strong> de l'adresse doit être renseigné.\n      </mat-error>\n    </mat-form-field>\n\n    <mat-form-field class=\"example-full-width col-6\">\n      <mat-label>Ville:</mat-label>\n      <input matInput type=\"text\" placeholder=\"Ville\" formControlName=\"ville\">\n      <mat-error [hidden]=\"forms.get('ville').valid || !forms.get('ville').touched\">\n        La <strong>ville</strong> doit être renseignée.\n      </mat-error>\n    </mat-form-field>\n    </div>\n\n    <div class=\"row\">\n    <mat-form-field class=\"example-full-width col-2\">\n      <mat-label>Batiment:</mat-label>\n      <input matInput type=\"text\" placeholder=\"A,B,C formControlName=\"batiment\">\n    </mat-form-field>\n\n    <mat-form-field class=\"example-full-width col-4\">\n      <mat-label>Digicode:</mat-label>\n      <input matInput type=\"text\" placeholder=\"Digicode\" formControlName=\"digicode\">\n    </mat-form-field>\n\n    <mat-form-field class=\"example-full-width col-4\">\n      <mat-label>Interphone:</mat-label>\n      <input matInput type=\"text\" placeholder=\"Interphone\" formControlName=\"interphone\">\n    </mat-form-field>\n    </div>\n\n    <div class=\"row\">\n    <mat-form-field class=\"example-full-width col-5\">\n      <mat-label>Etage:</mat-label>\n      <input matInput type=\"number\" placeholder=\"Etage\" formControlName=\"etage\">\n      <mat-error [hidden]=\"forms.get('etage').valid || !forms.get('etage').touched\">\n        <strong>L'étage</strong> doit être renseigné.\n      </mat-error>\n    </mat-form-field>\n\n    <mat-form-field class=\"example-full-width col-5\">\n      <mat-label>Porte:</mat-label>\n      <input matInput type=\"text\" placeholder=\"Droite, Gauche, Milieu...\" formControlName=\"porte\">\n      <mat-error [hidden]=\"forms.get('porte').valid || !forms.get('porte').touched\">\n        La position de votre <strong>porte</strong> sur le palier doit être renseignée.\n      </mat-error>\n    </mat-form-field>\n    </div>\n  </form>\n  <mat-action-list mat-dialog-actions>\n    <button mat-button color=\"accent\" (click)=\"onSubmit()\">Sauvegarder</button>\n    <button mat-button color=\"warn\" [mat-dialog-close]>Annuler</button>\n  </mat-action-list>\n</mat-dialog-content>\n","import {Component, OnInit} from '@angular/core';\nimport {Produit} from '../../../model/produit.model';\nimport {ProduitService} from '../../../services/produit.service';\nimport {Router} from '@angular/router';\n\n\n@Component({\n  selector: 'app-accueil',\n  templateUrl: './accueil.component.html',\n  styleUrls: ['./accueil.component.css']\n})\nexport class AccueilComponent implements OnInit {\n\n  newProducts: Array<Produit>;\n\n  constructor(private produitService: ProduitService, private router: Router) {\n  }\n\n  ngOnInit(): void {\n    this.initNewProducts();\n  }\n\n  private initNewProducts(): void {\n    this.produitService.getProduits().subscribe( data => {\n      this.newProducts = data;\n    });\n  }\n\n  showProduit(produit: Produit): void {\n    this.router.navigate(['/product'], {queryParams: {id : produit.id}});\n  }\n}\n","<div class=\"wrapper\">\r\n  <div  class=\"carousellide\">\r\n    <div class=\"carousel-inner\">\r\n      <div class=\"carousel-item active\">\r\n        <img class=\"d-block w-100\" src=\"../assets/img/carousel1.jpeg\" alt=\"First slide\">\r\n      </div>\r\n      <div class=\"carousel-item\">\r\n        <img class=\"d-block w-100\" src=\"../assets/img/carousel1.jpeg\" alt=\"Second slide\">\r\n      </div>\r\n      <div class=\"carousel-item\">\r\n        <img class=\"d-block w-100\" src=\"../assets/img/carousel1.jpeg\" alt=\"Third slide\">\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n  <div class=\"wrapperNewProduit\">\r\n    <h1>Nos nouveautés</h1>\r\n    <hr class=\"textHR\">\r\n  </div>\r\n\r\n  <div class=\"wrapperNewProductCardList\">\r\n      <mat-card class=\"productCard\" *ngFor=\"let produit of newProducts\">\r\n        <mat-card-content>\r\n          <img mat-card-image class=\"productCardIMG\" src=\"{{produit.urlPetitePhoto}}\" alt=\"Photo of a Shiba Inu\">\r\n          <p>{{produit.name}}</p>\r\n          <span id=\"unite\">à partir de</span>\r\n          <span id=\"productPrice\">00.00€</span>\r\n          <div class=\"discovery\">\r\n            <app-bouton label=\"Découvrir le produit\" (click)=\"showProduit(this.produit)\"></app-bouton>\r\n          </div>\r\n        </mat-card-content>\r\n      </mat-card>\r\n  </div>\r\n\r\n  <div>\r\n    <app-bouton class=\"buttonNewProduct\" label=\"voir les nouveautés\"></app-bouton>\r\n  </div>\r\n\r\n\r\n  <div class=\"charte\">\r\n  <div class=\"UneDoseDeVert\" id=\"UneDoseDeVert\">\r\n    <hr>\r\n    <mat-accordion>\r\n      <mat-expansion-panel>\r\n        <mat-expansion-panel-header>\r\n          <mat-panel-title>\r\n            Une Dose de Vert, l’épicerie fine végétale\r\n          </mat-panel-title>\r\n        </mat-expansion-panel-header>\r\n        <p>Une dose de vert, épicerie fine 100 % végétale, vous présente ses produits les plus qualitatifs et les plus respectueux de notre environnement.\r\n          <br>\r\n          Nous vous partageons :\r\n          <br>\r\n          - Nos meilleures denrées alimentaires saines, savoureuses et surtout végétales,\r\n          <br>\r\n          - Des cosmétiques bons pour vous et pour la planète,\r\n          <br>\r\n          - Des produits d’entretien naturels et biodégradables,\r\n          <br>\r\n          - Les ustensiles et accessoires du quotidien durables indispensables chez vous.\r\n          <br>\r\n          Vous retrouverez également sur notre site nos meilleures recettes personnalisées selon votre liste d’achat ainsi que nos conseils les plus avisés pour vous transmettre notre expertise.\r\n          <br>\r\n          Vous souhaitez ajouter une « belle Dose de vert » à vos assiettes ? Commandez sur notre site en ligne et laissez-vous guider grâce à nos meilleurs conseils et recettes !</p>\r\n      </mat-expansion-panel>\r\n    </mat-accordion>\r\n  </div>\r\n\r\n  <hr>\r\n\r\n  <div class=\"NosEngagements\" id=\"NosEngagements\">\r\n    <mat-accordion>\r\n      <mat-expansion-panel>\r\n        <mat-expansion-panel-header>\r\n          <mat-panel-title>\r\n            Nos Engagements\r\n          </mat-panel-title>\r\n        </mat-expansion-panel-header>\r\n\r\n        <p>Une dose de vert s’engage pour vous apporter une alternative végétale de confiance. Ainsi nous vous présentons les 5 piliers qui constituent la charte qualité et l’identité d’Une dose de vert :</p>\r\n\r\n        <img src=\"../assets/img/ic_engagements_1@3x.png\">\r\n\r\n        <h1>Des fournisseurs en or tu trouveras</h1>\r\n\r\n        <p>Nous faisons appel à des fournisseurs de qualité en majorité français, exepté pour les produits qui ne poussent pas sous nos latitudes (café, thé…) ou de spécialités régionales en provenance de nos chers voisins.<br>\r\n          Nous ne présentons leurs produits que si nous pouvons vous garantir la qualité de leur production. Nous <br> mettons un point d’honneur à établir une transparence et des liens de confiance avec tous nos fournisseurs.</p>\r\n\r\n        <img src=\"../assets/img/ic_engagements_2@3x.png\">\r\n\r\n        <h1>Le calcul de ton impact CO2 et social, en tête tu garderas</h1>\r\n\r\n        <p> Une dose de vert s’inscrit dans une démarche de circuit court. Dans cet objectif nous portons une grande <br> attention aux suggestions que nous pouvons recevoir pour être mis en contact avec toujours plus de nouveaux petits producteurs et artisans.\r\n          Nous avons à coeur de favoriser des produits qui dépassent nos exigences comme les produits issus du commerce équitable où bénéficiant d’un acheminement par voie maritime. </p>\r\n\r\n        <img src=\"../assets/img/ic_engagements_3@3x.png\">\r\n\r\n        <h1>Le meilleur pour la santé, tu exigeras</h1>\r\n\r\n        <p>Les produits alimentaires vendus par Une dose de vert sont soigneusement choisis et correspondent à des <br> critères favorisant la production biologique. Les petits producteurs n’ayant pas toujours les moyens de s’offrir une labelisation officielle,\r\n          Une dose de vert se porte garant grâce à sa charte éthique et écologique. Notre sélection se fait sur des critères d’ingrédients restrictifs afin de vous proposer des produits plus sains et sans additifs, dans une démarche de qualité et de respect de votre santé.</p>\r\n\r\n        <img src=\"../assets/img/ic_engagements_4@3x.png\">\r\n\r\n        <h1>Le juste prix, tu donneras</h1>\r\n\r\n        <p>Pour s’engager toujours au plus près de vous, Une dose de vert s’efforce de calculer le juste prix pour tous ses <br> clients tout en préservant ses critères de qualité et pour la juste rémunération des producteurs. C’est cette <br> démarche engagée et de proximité qui façonne notre identité.</p>\r\n      </mat-expansion-panel>\r\n    </mat-accordion>\r\n  </div>\r\n\r\n  <hr>\r\n\r\n  <div class=\"Equipe\" id=\"Equipe\">\r\n    <mat-accordion>\r\n      <mat-expansion-panel>\r\n        <mat-expansion-panel-header>\r\n          <mat-panel-title>\r\n            L'équipe\r\n          </mat-panel-title>\r\n        </mat-expansion-panel-header>\r\n        <p>\r\n          A la barre de Une dose de vert, on trouve Céline et Mathieu, jeunes trentenaires végétaliens et tous deux <br> engagés dans une démarche de réduction de leur impact environnemental. Couple à la ville, ils <br> s’investissent ensemble pour partager leurs connaissances, et vous faire découvrir de nouveaux <br> horizons culinaires.\r\n          <br>\r\n          Généreux et talentueux, Mathieu ne sera jamais avare de conseils et se fera un plaisir de répondre à vos <br> questions tandis que Céline, cuisinière de formation et formée par de grandes maisons (Galeries <br> Lafayette, Fauchon…), élabore des recettes originales ou détournées de grands classiques pour le plus <br> grand plaisir de vos papilles.\r\n          <br>\r\n          Que ce soit pour des raisons de santé, de préservation de l’environnement, ou de bien-être animal, nous <br> gagnons à intégrer une plus grande « dose de vert » dans nos assiettes. Des recettes saines aux plats <br> régressifs, en passant par des douceurs aux multiples saveurs, vous trouverez forcément quelque chose <br> qui vous plaît, pour vous familiariser avec la cuisine végétalienne !\r\n        </p>\r\n      </mat-expansion-panel>\r\n    </mat-accordion>\r\n  </div>\r\n\r\n  <hr>\r\n\r\n  <div class=\"LivraisonTarifs\" id=\"LivraisonTarifs\">\r\n    <mat-accordion>\r\n      <mat-expansion-panel>\r\n        <mat-expansion-panel-header>\r\n          <mat-panel-title>\r\n            Livraison et tarifs\r\n          </mat-panel-title>\r\n        </mat-expansion-panel-header>\r\n        <p>\r\n          Pour s’engager toujours au plus près de vous, Une dose de vert s’efforce de calculer le juste prix pour <br> tous ses clients tout en préservant ses critères de qualité et pour la juste rémunération des <br> producteurs. C’est cette démarche engagée et de proximité qui façonne notre identité à travers <br> Une dose de vert.\r\n          <br>\r\n          Nos frais de livraison sont de 3,50€, et la livraison est gratuite pour :<br>\r\n          - Un minimum de 20€ de commande en zone verte (communes de Levallois-Perret (92300),<br> Clichy (92110), Neuilly-sur-Seine (92200), Paris 17ème).<br>\r\n          - Un minimum de 30€ en zone bleue (Nanterre (92014), Courbevoie (92400), Asnières (92600),<br> Paris (autres arrondissements), Puteaux (92800)\r\n          <br>\r\n          - Nous ne livrons pas encore dans la zone orange mais sommes en recherche de partenaires pour des <br> livraisons avec une empreinte carbone réduite!\r\n          <br>\r\n          - Vous avez aussi la possibilité de venir chercher votre colis sur rendez-vous dans nos locaux à <br> Levallois-Perret, gratuitement et sans minimum de commande. Vous pourrez même apporter vos <br> bocaux ou sacs avec cette option!\r\n          <br>\r\n          Nous ne livrons pas dans les autres communes, mais si nos produits vous intéressent n’hésitez pas à <br> nous contacter à bienvenue@unedosedevert.fr\r\n        </p>\r\n      </mat-expansion-panel>\r\n    </mat-accordion>\r\n  </div>\r\n  <hr>\r\n</div>\r\n</div>\r\n","import {AfterViewInit, Component, ViewChild} from '@angular/core';\nimport {Label} from '../../../model/label';\nimport {MatTableDataSource} from '@angular/material/table';\nimport {MatPaginator} from '@angular/material/paginator';\nimport {MatSort} from '@angular/material/sort';\nimport {Router} from '@angular/router';\nimport {LabelService} from '../../../services/label.service';\nimport {MatDialog} from '@angular/material/dialog';\nimport {merge} from 'rxjs';\nimport {startWith, switchMap} from 'rxjs/operators';\nimport {LabelEditComponent} from '../../Label/label-edit/label-edit.component';\n\n@Component({\n  selector: 'app-admin-view-tag-categorie',\n  templateUrl: './admin-view-label.component.html',\n  styleUrls: ['./admin-view-label.component.css']\n})\nexport class AdminViewLabelComponent implements AfterViewInit {\n\n  label: Label;\n  labels: Array<Label>;\n  displayedColumns: string[] = ['name', 'modifier', 'supprimer'];\n  dataSource = new MatTableDataSource<Label>();\n\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n  @ViewChild(MatSort) sort: MatSort;\n\n  constructor(private router: Router, private labelService: LabelService, public dialog: MatDialog) { }\n\n  ngAfterViewInit(): void {\n    this.initLabel();\n    this.sort.sortChange.subscribe(() => this.paginator.pageIndex = 0);\n    merge(this.sort.sortChange, this.paginator.page).pipe(\n      startWith({}),\n      switchMap(() => {\n        return this.labelService.getLabelPage(this.paginator.pageIndex + 1, this.paginator.pageSize , this.sort.direction);\n      }));\n  }\n\n  private initLabel(): void {\n    this.labelService.getLabelPage(0, 30, 'DESC').subscribe(data => {\n        this.labels = data.content;\n        this.dataSource = new MatTableDataSource<Label>(this.labels);\n        this.dataSource.paginator = this.paginator;\n        this.dataSource.sort = this.sort;\n      },\n      err => {\n        console.log('error: ', err.error.message);\n      });\n  }\n\n  creerLabel(): void {\n    const dialogRef = this.dialog.open(LabelEditComponent, {\n      width: '350px',\n      data: {}\n    });\n    dialogRef.afterClosed().subscribe(next => {\n      this.initLabel();\n    });\n  }\n\n  modifierLabel(label: Label): void {\n    console.log('label: ', label);\n    const dialogRef = this.dialog.open(LabelEditComponent, {\n      width: '350px',\n      data: label\n    });\n    dialogRef.componentInstance.labelChange.subscribe(data => {\n      this.initLabel();\n    });\n  }\n\n  supprimerLabel(id: number): void {\n    this.labelService.deleteLabel(id).subscribe( next => this.initLabel()); }\n}\n\n\n","<div class=\"container\">\n  <button mat-raised-button (click)=\"creerLabel()\">Créer un label </button>\n  <table mat-table [dataSource]=\"this.dataSource\" matSort class=\"example-table\">\n    <ng-container matColumnDef=\"name\">\n      <th mat-header-cell *matHeaderCellDef mat-sort-header>Nom</th>\n      <td mat-cell *matCellDef=\"let label\">{{label.name}}</td>\n    </ng-container>\n    <ng-container matColumnDef=\"modifier\">\n      <th mat-header-cell *matHeaderCellDef>Modifier</th>\n      <td mat-cell *matCellDef=\"let label\">\n        <button mat-fab color=\"primary\" aria-label=\"Build\" [value]=\"label\" (click)=\"modifierLabel(label)\">\n          <mat-icon>build</mat-icon>\n        </button></td>\n    </ng-container>\n    <ng-container matColumnDef=\"supprimer\">\n      <th mat-header-cell *matHeaderCellDef>Supprimer</th>\n      <td mat-cell *matCellDef=\"let label\">\n        <button mat-fab color=\"warn\" aria-label=\"Build\" [value]=\"label\" (click)=\"supprimerLabel(label.id)\">\n          <mat-icon>delete</mat-icon>\n        </button></td>\n    </ng-container>\n    <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n    <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n  </table>\n  <mat-paginator [pageSizeOptions]=\"[5, 10, 20]\" showFirstLastButtons></mat-paginator>\n</div>\n\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-my-space-selector',\n  templateUrl: './my-space-selector.component.html',\n  styleUrls: ['./my-space-selector.component.css']\n})\nexport class MySpaceSelectorComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"wrapper\">\n  <ul>\n    <li>Mon compte</li>\n    <li>Mes informations</li>\n    <li>Mes adresses</li>\n    <li>Mes commandes</li>\n    <li>Mes retours</li>\n    <li>Mes favoris</li>\n    <li>Me déconnecter</li>\n  </ul>\n</div>\n","export class Label {\n  id: number;\n  name: string;\n  urlPhoto: any;\n}\n","import { Injectable } from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport {SousCategorie} from '../model/sous-categorie';\nimport {Observable} from 'rxjs';\nimport {FormGroup} from '@angular/forms';\nimport {ServicePartage} from './service.partage';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SousCategorieService {\n  private URL = '/api/produits/sousCategorie';\n\n  constructor(private http: HttpClient, private servicePartage: ServicePartage) {\n    this.URL = servicePartage.BACKEND_URL + this.URL;\n  }\n\n  getSousCategories(): Observable<Array<SousCategorie>> {\n    return this.http.get<Array<SousCategorie>>(this.URL);\n  }\n\n  getSousCategorie(id: number): Observable<SousCategorie> {\n    return this.http.get<SousCategorie>(`${this.URL}/${id}`);\n  }\n\n  getSousCategoriePage(page: number, size: number, sort: string): Observable<any> {\n    return this.http.get<any>(`${this.URL}/xxx?page=${page}&size=${size}&sort=${sort}`);\n  }\n\n  createSousCategorie(form: FormGroup): Observable <SousCategorie> {\n    console.log('form:', form.value);\n    return this.http.post<SousCategorie>(this.URL, form.value);\n  }\n\n  updateSousCategorie(form: FormGroup): Observable<SousCategorie> {\n    return this.http.put<SousCategorie>(`${this.URL}`, form.value);\n  }\n\n  deleteSousCategorie(id: number): Observable<SousCategorie> {\n    return this.http.delete<SousCategorie>(`${this.URL}/${id}`);\n  }\n}\n","import {AfterViewInit, Component, ViewChild} from '@angular/core';\nimport {Type} from '../../../model/type.model';\nimport {Router} from '@angular/router';\nimport {TypeService} from '../../../services/type.service';\nimport {MatTableDataSource} from '@angular/material/table';\nimport {MatPaginator} from '@angular/material/paginator';\nimport {MatSort} from '@angular/material/sort';\nimport {MatDialog} from '@angular/material/dialog';\nimport {merge} from 'rxjs';\nimport {startWith, switchMap} from 'rxjs/operators';\nimport {TypeEditComponent} from '../../Type/type-edit/type-edit.component';\n\n@Component({\n  selector: 'app-admin-view-types-list',\n  templateUrl: './admin-view-types-list.component.html',\n  styleUrls: ['./admin-view-types-list.component.css']\n})\nexport class AdminViewTypesListComponent implements AfterViewInit {\n\n  type: Type;\n  types: Array<Type>;\n  displayedColumns: string[] = ['name', 'modifier', 'supprimer'];\n  isLoadingResults = true;\n  dataSource = new MatTableDataSource<Type>();\n\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n  @ViewChild(MatSort) sort: MatSort;\n\n  constructor(private router: Router, private typeService: TypeService, public dialog: MatDialog) { }\n\n  ngAfterViewInit(): void {\n    this.initTypes();\n    this.sort.sortChange.subscribe(() => this.paginator.pageIndex = 0);\n    merge(this.sort.sortChange, this.paginator.page).pipe(\n      startWith({}),\n      switchMap(() => {\n        return this.typeService.getTypePage(this.paginator.pageIndex + 1, this.paginator.pageSize , this.sort.direction);\n      }));\n  }\n\n  private initTypes(): void {\n    this.typeService.getTypePage(0, 30, 'DESC').subscribe(data => {\n        this.types = data.content;\n        this.dataSource = new MatTableDataSource<Type>(this.types);\n        this.dataSource.paginator = this.paginator;\n        this.dataSource.sort = this.sort;\n      },\n      err => {\n        console.log('error: ', err.error.message);\n      });\n  }\n\n  creerType(): void {\n    const dialogRef = this.dialog.open(TypeEditComponent, {\n      data: {}\n    });\n    dialogRef.afterClosed().subscribe(next => {\n      this.initTypes();\n    });\n  }\n\n  modifierType(type: Type): void {\n    const dialogRef = this.dialog.open(TypeEditComponent, {\n      data: type\n    });\n    dialogRef.componentInstance.typeChange.subscribe(data => {\n      this.initTypes();\n    });\n  }\n\n  supprimerType(id: number): void {\n    this.typeService.deleteType(id).subscribe( next => this.initTypes()); }\n}\n","<div class=\"container\">\n  <button mat-raised-button (click)=\"creerType()\">Créer un type de produit</button>\n  <table mat-table [dataSource]=\"this.dataSource\" matSort class=\"example-table\">\n    <ng-container matColumnDef=\"name\">\n      <th mat-header-cell *matHeaderCellDef mat-sort-header>Nom</th>\n      <td mat-cell *matCellDef=\"let type\">{{type.name}}</td>\n    </ng-container>\n    <ng-container matColumnDef=\"modifier\">\n      <th mat-header-cell *matHeaderCellDef>Modifier</th>\n      <td mat-cell *matCellDef=\"let type\">\n        <button mat-fab color=\"primary\" aria-label=\"Build\" [value]=\"\" (click)=\"modifierType(type)\">\n          <mat-icon>build</mat-icon>\n        </button></td>\n    </ng-container>\n    <ng-container matColumnDef=\"supprimer\">\n      <th mat-header-cell *matHeaderCellDef>Supprimer</th>\n      <td mat-cell *matCellDef=\"let type\">\n        <button mat-fab color=\"warn\" aria-label=\"Build\" [value]=\"type\" (click)=\"supprimerType(type.id)\">\n          <mat-icon>delete</mat-icon>\n        </button></td>\n    </ng-container>\n    <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n    <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n  </table>\n  <mat-paginator [pageSizeOptions]=\"[5, 10, 20]\" showFirstLastButtons></mat-paginator>\n</div>\n\n\n","export class AuthLoginInfo {\r\n  email: string;\r\n  password: string;\r\n\r\n  constructor(email: string, password: string) {\r\n    this.email = email;\r\n    this.password = password;\r\n  }\r\n}\r\n\r\n","import {Component, Input, OnInit} from '@angular/core';\nimport {Produit} from '../../../../model/produit.model';\nimport {ProduitService} from '../../../../services/produit.service';\nimport {SearchCriteria} from '../../../../model/search-criteria';\n\n@Component({\n  selector: 'app-view-all-products',\n  templateUrl: './view-all-products.component.html',\n  styleUrls: ['./view-all-products.component.css']\n})\nexport class ViewAllProductsComponent implements OnInit {\n\n  @Input()\n  search: string;\n  @Input()\n  typeSearch: string;\n  searchCriteria: SearchCriteria;\n  produits: Array<Produit>;\n\n  constructor(private produitService: ProduitService) { }\n\n  ngOnInit(): void {\n    this.initProduitList();\n    console.log(this.produits);\n  }\n\n  private initProduitList(): void {\n    if (this.typeSearch === 'sc' && this.typeSearch != null) {\n      this.searchCriteria.sousCategorie = this.search;\n      console.log('testSC');\n    }\n    if (this.typeSearch === 'cat' && this.typeSearch != null){\n      this.searchCriteria.categorie = this.search;\n      console.log('cat');\n    }\n\n    this.produitService.findProductByCriteria(this.searchCriteria).subscribe(data => {\n      this.produits = data;\n      console.log('produits :', this.produits);\n    });\n  }\n}\n","<div class=\"wrapper\">\n  <div class=\"cardWrapper\">\n  <div class=\"card\"  *ngFor=\"let produit of produits\">\n<app-carte-produit [produit]=\"produit\"></app-carte-produit>\n  </div>\n  </div>\n</div>\n","export enum Stock {\n  DISPONIBLE = 'Produit en stock',\n  STOCK_FAIBLE = 'Stock faible, réapprovisionnement en cours',\n  REAPPROVISIONNEMENT = 'Produit indisponible pour le moment'\n}\n","import {RouterModule, Routes} from '@angular/router';\r\nimport {NgModule} from '@angular/core';\r\nimport {AdminViewProductComponent} from './Admin/admin-view-product/admin-view-product.component';\r\nimport {ProduitEditComponent} from './Produit/produit-edit/produit-edit.component';\r\nimport {LoginComponent} from './Auth/login/login.component';\r\nimport {CreateUserComponent} from './User/create-user/create-user.component';\r\nimport {AccueilComponent} from './Accueil/accueil/accueil.component';\r\nimport {TypeEditComponent} from './Type/type-edit/type-edit.component';\r\nimport {AdminViewTypesListComponent} from './Admin/admin-view-types-list/admin-view-types-list.component';\r\nimport {CategorieEditComponent} from './Categorie/categorie-edit/categorie-edit.component';\r\nimport {AdminViewCategorieListComponent} from './Admin/admin-view-categorie-list/admin-view-categorie-list.component';\r\nimport {AdresseEditComponent} from './Adresse/adresse-edit/adresse-edit.component';\r\nimport {AdminViewTagComponent} from './Admin/admin-view-tag/admin-view-tag.component';\r\nimport {TagEditComponent} from './Tags/tag-edit/tag-edit.component';\r\nimport {AdminViewLabelComponent} from './Admin/admin-view-label/admin-view-label.component';\r\nimport {LabelEditComponent} from './Label/label-edit/label-edit.component';\r\nimport {AdminViewSousCategorieListComponent} from './Admin/admin-view-sous-categorie-list/admin-view-sous-categorie-list.component';\r\nimport {SousCategorieEditComponent} from './Categorie/sous-categorie-edit/sous-categorie-edit.component';\r\nimport {ViewProductComponent} from './Produit/view-product/view-product.component';\r\nimport {ViewAllProductsComponent} from './Produit/view-all-product/view-all-products/view-all-products.component';\r\nimport {MySpaceComponent} from './User/my-space/my-space.component';\r\n\r\n\r\nconst routes: Routes = [\r\n  { path: 'admin/products', component: AdminViewProductComponent},\r\n  { path: 'admin/products/edit', component: ProduitEditComponent},\r\n  { path: 'admin/products/categories/edit', component: CategorieEditComponent},\r\n  { path: 'admin/products/categories', component: AdminViewCategorieListComponent},\r\n  { path: 'admin/products/sous-categories', component: AdminViewSousCategorieListComponent},\r\n  { path: 'admin/products/sous-categories/edit', component: SousCategorieEditComponent},\r\n  { path: 'admin/products/types', component: AdminViewTypesListComponent},\r\n  { path: 'admin/products/types/edit', component: TypeEditComponent},\r\n  { path: 'admin/products/tags', component: AdminViewTagComponent},\r\n  { path: 'admin/products/tags/edit', component: TagEditComponent},\r\n  { path: 'admin/products/labels', component: AdminViewLabelComponent},\r\n  { path: 'admin/products/label/edit', component: LabelEditComponent},\r\n  { path: 'login', component: LoginComponent},\r\n  { path: 'user/adress/edit', component: AdresseEditComponent},\r\n  { path: 'user/add', component: CreateUserComponent},\r\n  { path: 'user/mySpace', component: MySpaceComponent},\r\n  { path: 'accueil', component: AccueilComponent},\r\n  { path: 'product', component: ViewProductComponent},\r\n  { path: 'products', component: ViewAllProductsComponent},\r\n  { path: '', redirectTo: 'accueil', pathMatch: 'full'},\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\n\r\nexport class AppRoutingModule { }\r\n\r\n","import { Component, OnInit } from '@angular/core';\nimport {FormBuilder, FormControl, FormGroup, Validators} from '@angular/forms';\nimport {UserService} from '../../../services/user.service';\nimport {Router} from '@angular/router';\n\n@Component({\n  selector: 'app-my-space',\n  templateUrl: './my-space.component.html',\n  styleUrls: ['./my-space.component.css']\n})\nexport class MySpaceComponent implements OnInit {\n\n  formsUser: FormGroup;\n\n  constructor(private formBuilder: FormBuilder, private userService: UserService, private router: Router) { }\n\n  ngOnInit(): void {\n    this.initFormsUser();\n  }\n\n  private initFormsUser(): void {\n    this.formsUser = this.formBuilder.group(\n      {\n        genre: ['', Validators.required],\n        nom: ['', Validators.required],\n        prenom: ['', Validators.required],\n        anniversaire: new FormControl(),\n        email: new FormControl('', Validators.compose([\n          Validators.required,\n          Validators.pattern('[A-Za-z0-9._%-]+@[A-Za-z0-9._%-]+\\\\.[a-z]{2,3}')\n        ])),\n        telephone: new FormControl('', Validators.compose([\n          Validators.required,\n          Validators.pattern('^[0-9]{10}$')\n        ])),\n        password: ['', [Validators.min(6), Validators.required]],\n      });\n  }\n}\n","<div class=\"wrapper\">\n\n  <div class=\"selector\">\n    <app-my-space-selector></app-my-space-selector>\n  </div>\n\n  <div class=\"wrapperMySpace\">\n\n    <app-bouton class=\"btnAllCommands\"label=\"voir toutes mes commandes\"></app-bouton>\n\n    <div class=\"lastCommande\">\n      <p class=\"separation\">Dernière commande</p>\n    </div>\n\n    <p class=\"separation\">Informations du compte</p>\n    <div class=\"infoWrapper\">\n      <div class=\"info\">\n        <p class=\"sousCat\">Informations de contact</p>\n        <form [formGroup]=\"formsUser\">\n          <mat-radio-group formControlName=\"genre\">\n            <mat-radio-button  value=\"Monsieur\">Monsieur</mat-radio-button>\n            <mat-radio-button  value=\"Madame\">Madame</mat-radio-button>\n          </mat-radio-group>\n\n          <mat-form-field>\n            <input matInput placeholder=\"Nom\" formControlName=\"nom\">\n          </mat-form-field>\n\n          <mat-form-field>\n            <input matInput placeholder=\"Prenom\" formControlName=\"prenom\">\n          </mat-form-field>\n        </form>\n        <app-bouton label=\"Modifier\" padding=\"1%\"></app-bouton>\n      </div>\n\n        <div class=\"newsletter\">\n          <p class=\"sousCat\">Newsletter</p>\n        </div>\n      </div>\n\n\n    <div class=\"adresses\">\n      <p class=\"separation\">Mes adresses</p>\n    </div>\n  </div>\n</div>\n\n","import { Injectable } from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport {Observable} from 'rxjs';\nimport {FormGroup} from '@angular/forms';\nimport {Tag} from '../model/tag.model';\nimport {ServicePartage} from './service.partage';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TagService {\n\n  private URL = '/api/produits/tag';\n\n  constructor(private http: HttpClient, private servicePartage: ServicePartage) {\n    this.URL = servicePartage.BACKEND_URL + this.URL;\n  }\n\n  getTags(): Observable<Array<Tag>> {\n    return this.http.get<Array<Tag>>(this.URL);\n  }\n\n  getTag(id: number): Observable<Tag> {\n    return this.http.get<Tag>(`${this.URL}/${id}`);\n  }\n\n  getTagPage(page: number, size: number, sort: string): Observable<any> {\n    return this.http.get<any>(`${this.URL}/xxx?page=${page}&size=${size}&sort=${sort}`);\n  }\n\n  createTag(form: FormGroup): Observable < Tag> {\n    console.log('form:', form.value);\n    return this.http.post<Tag>(this.URL, form.value);\n  }\n\n  updateTag(form: FormGroup): Observable<Tag> {\n    return this.http.put<Tag>(`${this.URL}`, form.value);\n  }\n\n  deleteTag(id: number): Observable<Tag> {\n    return this.http.delete<Tag>(`${this.URL}/${id}`);\n  }\n}\n","import {Component, Input, OnInit} from '@angular/core';\n\n@Component({\n  selector: 'app-tag-chips',\n  templateUrl: './tag-chips.component.html',\n  styleUrls: ['./tag-chips.component.css']\n})\nexport class TagChipsComponent implements OnInit {\n  @Input()\n  label: string;\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"custom-chips\">\n  <span>{{label}}</span>\n</div>\n","import {Component, OnInit, ViewChild} from '@angular/core';\nimport {MatMenuTrigger} from '@angular/material/menu';\nimport {TokenStorageService} from '../../../services/security/token-storage.service';\nimport {Type} from '../../../model/type.model';\nimport {TypeService} from '../../../services/type.service';\nimport {FormBuilder, FormGroup} from '@angular/forms';\n\n\n@Component({\n  selector: 'app-menu',\n  templateUrl: './menu.component.html',\n  styleUrls: ['./menu.component.css']\n})\nexport class MenuComponent implements OnInit {\n  authorities: string;\n  tokenEmail: string;\n\n  type: Type;\n  typeToDisplay: Type;\n  types: Array<Type>;\n  forms: FormGroup;\n\n  constructor(private typeService: TypeService,  private formBuilder: FormBuilder) { }\n\n  ngOnInit(): void {\n    this.initTypes();\n    this.initForms();\n  }\n\n  private initTypes(): void {\n    this.typeService.getTypes().subscribe( data => {\n      this.types = data;\n    });\n  }\n\n  private initForms(): void {\n   this.forms = this.formBuilder.group({\n      search: '',\n    });\n  }\n\n  onSubmit(forms: FormGroup): void {\n    console.log(this.forms);\n  }\n\n  openMenu(type: Type): void {\n    if (type === this.typeToDisplay && this.typeToDisplay != null) {\n      this.typeToDisplay = null;\n    } else {\n      this.typeToDisplay = type;\n    }\n  }\n}\n","<div class=\"wrapperMenu\">\n  <ul class=\"typeList\">\n    <li class=\"typeButton\" *ngFor=\"let typ of types\" (click)=\"openMenu(this.typ)\"><span>{{typ.name}}</span></li>\n  </ul>\n\n  <div class=\"wrapperRightSide\">\n    <ul class=\"socialList\">\n      <li class=\"socialButton\"><p>Une dose de vert -- next version</p></li>\n      <li class=\"socialButton\"><p>Nos recettes</p></li>\n      <li class=\"socialButton\"><p>Le Blog</p></li>\n\n    <mat-form-field [formGroup]=\"forms\" (ngSubmit)=\"onSubmit(this.forms)\" appearance=\"none\">\n      <label>\n        <input class=\"searchBar\" matInput placeholder=\"Rechercher....\" formControlName=\"search\" >\n      </label>\n      <button mat-button matSuffix mat-icon-button (click)=\"onSubmit(this.forms)\">\n        <mat-icon>search</mat-icon>\n      </button>\n    </mat-form-field>\n    </ul>\n  </div>\n</div>\n\n<app-sous-menu [type]=\"typeToDisplay\" *ngIf=\"typeToDisplay != null\"></app-sous-menu>\n\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}